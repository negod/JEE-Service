<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4c35a2a0-f722-40f7-bc81-7bbcc47092ef" activeEnvironment="Default" name="Service archetype" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormBase Path"/><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormTarget Folder">C:\Users\Programmering\Desktop</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormFormat">json</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormAPI Version">1.0</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormSwagger Version">2.0</con:setting></con:settings><con:interface xsi:type="con:RestService" id="d763a7c9-f981-4c25-869e-96cb26793207" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://192.168.2.140:8082" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://192.168.2.140:8082</con:endpoint></con:endpoints><con:resource name="Service" path="/${#Project#DomainName}/rest/${#Project#ServiceName}" id="34e98a8f-09c7-43c1-987a-b95a28b5bba9"><con:settings/><con:parameters/><con:resource name="{id}" path="{id}" id="d80d0a59-e766-4b1d-8f07-520dfab94d8e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Delete" id="01ceb004-519e-4ef1-a6d3-a817927a9225" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="2bdc747e-e009-4e6c-8be2-4d58ef46007a" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service/">ser:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetById" id="def7547b-e616-4884-934f-0879c3cf3a30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/1772f013-1db2-495a-969d-8bcb1f6c453f</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="1772f013-1db2-495a-969d-8bcb1f6c453f" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="SearchFields" path="search/fields" id="f11c3452-67af-4523-997f-41ec7997a2ff"><con:settings/><con:parameters/><con:method name="GetSearchFields" id="10eb7e6b-22d8-4694-9879-d26c8e05fc19" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="List" path="list" id="14c2ef5c-1bbd-4a71-8a56-a30fcd38345e"><con:settings/><con:parameters/><con:method name="GetFilteredList" id="42e42f4f-d8ad-42d4-a590-3756c4149ba7" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name", "domain.name", "users.name", "serviceDetail.name"],
	"pagination":{
		"listSize":10,
		"page":0
		},
	"globalSearchWord":"*"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Index" path="index" id="9d0b3d5f-c6cd-4366-9289-8d58f2f66803"><con:settings/><con:parameters/><con:method name="Index Lucene" id="40ed6771-94e3-4295-9c00-82cb9282303e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Index Lucene" id="3320ba69-f2c6-4c35-a5b2-4bd45ac15784" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/index</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="{id}" path="update/{id}" id="9d77d85f-0b01-4b5c-821b-a294a1e331e0"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="updateObject" id="1ae1507f-14a7-4c5c-a826-19c9fb7794ab" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400 405</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:e93="http://192.168.2.140/service-parent/rest/service-parent/update/44e9385b-19dd-4a30-b79e-095da341bbfa">e93:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="updateObject" id="97be0246-17d0-463f-be99-12e10b1d6104" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"objectId":"5f7b7306-7099-4576-8298-cd10bab4bee0",
	"object":"domain",
	"type":"ADD"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/update/44e9385b-19dd-4a30-b79e-095da341bbfa</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="2fa71586-ecd4-4cda-814d-fc9ad81f8ca4" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="GetAll" id="2681b6c0-3349-4bc5-9784-10f2f1d581df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetAll" id="45020183-5255-4fda-a66c-ca5a5e1144b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzIwNDY4LCJleHAiOjE1MDI3MjEzNjh9.LvQaQGrXpbvCvIfJg6jV4trReTtsD-fS354pdkUPUwlvMv35UAHif13_z8iAZRUBTOVtOUbLlTLMu9jheODA3g" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="3bad21c8-c78a-4409-8842-86f3d250b3f6" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service">ser:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#Project#name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="Domain" path="/${#Project#DomainName}/rest/${#Project#ServiceName2}" id="34e98a8f-09c7-43c1-987a-b95a28b5bba9"><con:settings/><con:parameters/><con:resource name="{id}" path="{id}" id="d80d0a59-e766-4b1d-8f07-520dfab94d8e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Delete" id="01ceb004-519e-4ef1-a6d3-a817927a9225" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="2bdc747e-e009-4e6c-8be2-4d58ef46007a" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service/">ser:Response</con:element></con:representation><con:request name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetById" id="def7547b-e616-4884-934f-0879c3cf3a30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="SearchFields" path="search/fields" id="f11c3452-67af-4523-997f-41ec7997a2ff"><con:settings/><con:parameters/><con:method name="GetSearchFields" id="10eb7e6b-22d8-4694-9879-d26c8e05fc19" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="List" path="list" id="14c2ef5c-1bbd-4a71-8a56-a30fcd38345e"><con:settings/><con:parameters/><con:method name="GetFilteredList" id="42e42f4f-d8ad-42d4-a590-3756c4149ba7" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name"],
	"pagination":{
		"listSize":40,
		"page":0
		},
	"globalSearchWord":"Service1"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Index" path="index" id="9d0b3d5f-c6cd-4366-9289-8d58f2f66803"><con:settings/><con:parameters/><con:method name="Index Lucene" id="40ed6771-94e3-4295-9c00-82cb9282303e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Index Lucene" id="3320ba69-f2c6-4c35-a5b2-4bd45ac15784" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/index</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GetAll" id="2681b6c0-3349-4bc5-9784-10f2f1d581df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetAll" id="45020183-5255-4fda-a66c-ca5a5e1144b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="3bad21c8-c78a-4409-8842-86f3d250b3f6" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service">ser:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#Project#name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="User" path="/${#Project#DomainName}/rest/${#Project#ServiceName3}" id="34e98a8f-09c7-43c1-987a-b95a28b5bba9"><con:settings/><con:parameters/><con:resource name="{id}" path="{id}" id="d80d0a59-e766-4b1d-8f07-520dfab94d8e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Delete" id="01ceb004-519e-4ef1-a6d3-a817927a9225" method="DELETE"><con:settings/><con:parameters/><con:request name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="2bdc747e-e009-4e6c-8be2-4d58ef46007a" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service/">ser:Response</con:element></con:representation><con:request name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetById" id="def7547b-e616-4884-934f-0879c3cf3a30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="SearchFields" path="search/fields" id="f11c3452-67af-4523-997f-41ec7997a2ff"><con:settings/><con:parameters/><con:method name="GetSearchFields" id="10eb7e6b-22d8-4694-9879-d26c8e05fc19" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="List" path="list" id="14c2ef5c-1bbd-4a71-8a56-a30fcd38345e"><con:settings/><con:parameters/><con:method name="GetFilteredList" id="42e42f4f-d8ad-42d4-a590-3756c4149ba7" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name"],
	"pagination":{
		"listSize":40,
		"page":0
		},
	"globalSearchWord":"Service1"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Index" path="index" id="9d0b3d5f-c6cd-4366-9289-8d58f2f66803"><con:settings/><con:parameters/><con:method name="Index Lucene" id="40ed6771-94e3-4295-9c00-82cb9282303e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Index Lucene" id="3320ba69-f2c6-4c35-a5b2-4bd45ac15784" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/index</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GetAll" id="2681b6c0-3349-4bc5-9784-10f2f1d581df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetAll" id="45020183-5255-4fda-a66c-ca5a5e1144b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="3bad21c8-c78a-4409-8842-86f3d250b3f6" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service">ser:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#Project#name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="Login" path="/${Project#DomainName/rest/auth/login" id="473cedd3-4095-4d53-a4af-d6c1662d9742"><con:settings/><con:parameters/><con:method name="Login" id="4f8af2a6-5653-48c2-beeb-baa114ec7d16" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Login" id="b90ac163-7f38-415a-8447-049a44f21488" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6998a10c-efe5-403c-9b3c-a812ae2e0b14" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://192.168.2.140:8082" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://192.168.2.140:8082</con:endpoint></con:endpoints><con:resource name="Login" path="/service-parent-1.0-SNAPSHOT/rest/auth/login" id="794d71cd-8022-4c72-a572-6169613fed4e"><con:settings/><con:parameters/><con:method name="Login 1" id="10d4cdac-380f-4f16-8e73-84213e25f428" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="login" id="4aae4b62-0520-4a90-b7ec-e28d33809daf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent-1.0-SNAPSHOT/rest/auth/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="7079416b-b5db-4723-ba00-9c139f104f4f" name="Service Test ( Inc OneToOne )"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2ded9caf-0f51-42b8-a6dc-33572bda19f4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="593c5fe8-3da1-4401-89cc-f7cae13099fd"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/service-parent-1.0-SNAPSHOT/rest/auth/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="4aae4b62-0520-4a90-b7ec-e28d33809daf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent-1.0-SNAPSHOT/rest/auth/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Global Auth Header Value" id="075e016e-da3b-4da4-b5a7-4b3d00336cd3"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def headerValue = testRunner.testCase.getTestStepByName("Login").httpRequest.response.responseHeaders["Authorization"] as String
testRunner.testCase.setPropertyValue( "HeaderValue", headerValue ) 
</script></con:config></con:testStep><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzI4MTI1LCJleHAiOjE1MDI3MjkwMjV9.953MQDjONYoeSy3tz6Btbv8_H62VKy7_20QnsNcxrIIotdk3Vr0kWNUdJj3Z1Dp43fKVQNfEyfSq_oN6Dm9tpw]</con:value></con:property></con:properties></con:testCase><con:testCase id="f784c9a7-951e-402b-851f-8d8831112d58" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="61b5105c-58c9-4f0d-bb47-f1b30daac429"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzI4MjMxLCJleHAiOjE1MDI3MjkxMzF9.wyelX22YGeLpm4gShvCv7RZTy6kYeq9EyaBl5FCWU49P-hn87hMVQZRi9f3e4DZgHjuK6w2FLO-Xt6tCaVREAw]</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="38a4e78b-acf8-42ce-b834-99d46f7d694d"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String
testRunner.testCase.testSuite.setPropertyValue( "Name", uuid ) 

uuid = randomUUID() as String
testRunner.testCase.testSuite.setPropertyValue( "serviceDetailName", uuid ) 










</script></con:config></con:testStep><con:testStep type="restrequest" name="Create" id="626e507d-5e6a-4cb5-bc30-06ebf0464653"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestSuite#auth}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"name":"${#TestSuite#Name}",
	"detail":{
         "name": "${#TestSuite#serviceDetailName}"
      }
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check 200 is returned"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ab49d409-d824-4927-a3cb-45aa01f9e46b" name="Response SLA" disabled="true"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Returned Id As Parameter" id="1f5ccf45-7858-49b3-a5af-b31889899e80"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput


// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Set the returned ID as a parameter
def jsonResp = new JsonSlurper().parseText(response)
testRunner.testCase.setPropertyValue( "id", jsonResp.id ) 
testRunner.testCase.setPropertyValue( "name", jsonResp.name ) </script></con:config></con:testStep><con:testStep type="groovy" name="Assert Generic Data" id="b652a781-ae7b-4a10-bff1-2fcf3109b9c4"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)
def nowDate = new Date().format("yyyy-MM-dd HH")

// ******* Service *********

//Assert the returned id is a UUID
def id = jsonResp.id =~ /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
assert id.matches()

//Assert the returned date down to hours granuarity
def createdDate = new Date()
createdDate.setTime(jsonResp.updatedDate)
def parsedDate = createdDate.format("yyyy-MM-dd HH")

def createdAssertion = parsedDate =~ nowDate
assert createdAssertion.matches()

// ******* ServiceDetail *********

//Assert the returned id is a UUID
def detailId = jsonResp.detail.id =~ /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
assert detailId.matches()

//Assert the returned date down to hours granuarity
def serviceDetailCreatedDate = new Date()
createdDate.setTime(jsonResp.detail.updatedDate)
def serviceDetailParsedDate = serviceDetailCreatedDate.format("yyyy-MM-dd HH")

def serviceDetailCreatedAssertion = serviceDetailParsedDate =~ nowDate
assert serviceDetailCreatedAssertion.matches()

//Assert serviceid and servicedetailid are the same ( OneToOne relation )
assert jsonResp.id == jsonResp.detail.id





</script></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="f2b49dc2-052c-46a5-8c22-dc3c252112ac"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert the returned name
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("name")

//Assert the returned name of the servicedetail
assert jsonResp.detail.name == testRunner.testCase.testSuite.getPropertyValue("serviceDetailName")





</script></con:config></con:testStep><con:testStep type="restrequest" name="Create With Same Name" id="f9af0eb6-0a00-4acd-be4e-64ee9afdb5c0"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create With Same Name" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#Name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check that name cannot be created again"><con:configuration><codes>500
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>0ac3c6f7-53fd-49bb-95cb-194cce8bb2d3</con:value></con:property><con:property><con:name>name</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="46160377-fa2b-4267-8db7-4aa31f4e8757" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetById" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Entity" id="e101ff12-2eaf-4aca-a0f1-142ab380f875"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="GetById" id="f0c986d4-d5ba-4b0d-a063-b36b66974017"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/id</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="b16ed2d0-8752-4c8b-a93a-6b88ca4fc277"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetById#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("Name")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.testSuite.getPropertyValue("Id")







</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d809f2af-6c9b-4276-a540-e7ec76a4298c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="fed2fbe4-843f-4eb5-8666-c85dc0c5aac8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Assert Created" id="7a727dfe-52f0-4f85-acec-8f9d08766c01"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>46160377-fa2b-4267-8db7-4aa31f4e8757</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="943930bc-b169-45e4-8d58-a3f5f0874bc7"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.testSuite.setPropertyValue( "UpdatedName", uuid ) 











</script></con:config></con:testStep><con:testStep type="restrequest" name="Update" id="956764b7-fb38-4126-9d19-aa85672f7aa8"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#UpdatedName}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c10543d7-8a77-4825-83b6-c6bbc3c4541b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="b0977c57-49d2-44d2-94e3-641d321bb0cf"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Update#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("UpdatedName")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.testSuite.getPropertyValue("Id")
assert jsonResp.detail != null








</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="907026a7-f16f-48e4-b734-fb9bf4a47955" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="c9f6ab82-d8c2-4042-a459-83cdb1225e64"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Assert Created" id="9e025fb5-ee9f-4e0b-b4f0-a28d883e1865"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>46160377-fa2b-4267-8db7-4aa31f4e8757</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="Delete" id="5c2055cb-e9d9-4494-9668-be3a5b8283b7"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Assert Deleted ( GetById )" id="0a9f6ebd-013f-42a1-845e-c18a15d3dd57"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Assert Deleted ( GetById )" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b0f117eb-aa68-41ee-bd7b-a7a9d65c4d96" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="160cacf1-1f96-4047-b2a7-59e773b599a9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAll" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="42126efd-2c55-4e3a-983b-8d11cb0f22bc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Entity1</con:name><con:value>4e87c140-f430-4477-93eb-2f866e5fb2ab</con:value></con:property><con:property><con:name>Entity2</con:name><con:value>6355d47e-f54d-4dac-bf8b-1405e47ddd3f</con:value></con:property><con:property><con:name>Entity3</con:name><con:value>5c6fa652-a112-4e9b-bb70-3ed6c7440338</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity1" id="be494bcf-13a7-43eb-ad49-a0fa576ba748"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity1" id="7d640edd-f938-45fc-96ea-cc631937dcd2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity1</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity2" id="019f2625-1d7a-4ecc-bbbb-ee635a646759"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity2" id="68e6d867-ac0a-4e8c-b37f-aa73eba89f6d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity2</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity3" id="dcb490c0-34ae-42cc-8db1-3771b065cbeb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity3" id="953e98f6-b977-4c4d-be73-fc24855d3fd8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity3</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetAll" id="18ab2def-846e-4c81-b069-7b6f8e2ed0f4"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}" methodName="GetAll" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAll" id="264e557a-2377-406c-bd55-4cb399b8fb7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/bfedc82b-296c-415a-bac1-b1691a51bfe6</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c170debe-1907-48c7-b82c-29be79213eee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="db021b5e-b6dd-4774-9294-2db5e252abe4" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="73eddb84-abe6-425f-82a4-c44a99134e00"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetAll#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 3 objects in the returned list
assert jsonResp.size() >= 3

//Assert the 3 inserted entities exists in the returned list
def entityIds = new String[3]
entityIds[0] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity1" )
entityIds[1] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity2" )
entityIds[2] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity3" )

def idList = [] 

for(item in jsonResp){
	idList.add(item.id)		
}

idList = idList.toSet()

assert idList.contains(entityIds[0])
assert idList.contains(entityIds[1])
assert idList.contains(entityIds[2])












</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="56498e5d-802e-436b-a5b2-9f7f9193e55d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchFields" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetSearchFields" id="ab5bdebd-d5f4-4ce7-bc7d-74d46adb40cf"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/search/fields" methodName="GetSearchFields" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="48ad2e6f-230b-4242-b1f2-6295c9a71d16"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetSearchFields#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 1 objects in the returned list
assert jsonResp.size() == 4

//Assert expected fields
def idList = jsonResp.toSet() 
idList = jsonResp.toSet()

assert idList.contains("name")
assert idList.contains("users.name")
assert idList.contains("domain.name")
assert idList.contains("name")
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>Id</con:name><con:value>5c6fa652-a112-4e9b-bb70-3ed6c7440338</con:value></con:property><con:property><con:name>UpdatedName</con:name><con:value>70e04337-bde3-479d-b0f9-a52399e54769</con:value></con:property><con:property><con:name>name</con:name><con:value>ef268528-8deb-4536-a830-a978d494212f</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>1a7e28a9-1c19-49cf-83be-e136b27bae5b</con:value></con:property><con:property><con:name>auth</con:name><con:value>[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzI3MzU3LCJleHAiOjE1MDI3MjgyNTd9.CNbIaOFZGGUQYy8O4lW9m9Fhmqf2WMasC2R1CUwpOd-JnBBSIo9RjMvWsoZXl37jxf7QNCgCiMgWP_Hlzi_8oQ]</con:value></con:property></con:properties></con:testSuite><con:testSuite id="2afab8b4-1409-454d-9ee6-bc1832f80d53" name="Domain Test"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="45455ffc-b3d8-4fdb-8f72-ae99ae070cf0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Create And Set Request Data" id="7ef62010-ce69-481e-a3bb-fc4be814f1bd"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.testSuite.setPropertyValue( "Name", uuid ) 










</script></con:config></con:testStep><con:testStep type="restrequest" name="Create" id="5bda3d45-5777-4f85-a230-7dd8ef9af92e"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#Name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check 200 is returned"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ab49d409-d824-4927-a3cb-45aa01f9e46b" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Returned Id As Parameter" id="c707e5d9-4c00-4c22-a2da-26e45d83aef4"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput


// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Set the returned ID as a parameter
def jsonResp = new JsonSlurper().parseText(response)
testRunner.testCase.testSuite.setPropertyValue( "Id", jsonResp.id ) </script></con:config></con:testStep><con:testStep type="groovy" name="Assert Generic Data" id="92e0cecb-fc15-41bf-b406-e8cc4fade6ed"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert the returned id is a UUID
def id = jsonResp.id =~ /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
assert id.matches()

//Assert the returned date down to hours granuarity
def createdDate = new Date()
createdDate.setTime(jsonResp.updatedDate)
def parsedDate = createdDate.format("yyyy-MM-dd HH")

def nowDate = new Date().format("yyyy-MM-dd HH")

def createdAssertion = parsedDate =~ nowDate
assert createdAssertion.matches()





</script></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="fab03243-802f-40de-9ca6-529c7e1ed71f"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert the returned name
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("Name")







</script></con:config></con:testStep><con:testStep type="restrequest" name="Create With Same Name" id="2794841d-48bd-4e1b-9e5e-be20f42b98e6"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create With Same Name" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#Name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check that name cannot be created again"><con:configuration><codes>500
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4e162a3f-e460-4c8b-89e6-e736b89a69d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetById" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Entity" id="d8f3e817-76c2-4908-afda-c7ade65f4d41"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="GetById" id="a93d1925-dad7-41c8-ad2e-9bf12c50a008"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/id</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="1a07d73d-9251-4c6a-9766-593aa823fd37"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetById#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("Name")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.testSuite.getPropertyValue("Id")







</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fb19a930-6158-4db2-bfdc-0e16d85e632b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="9fedb622-9c85-428f-a6bf-1b51de741171"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Assert Created" id="7bf5e77f-bc93-4ae1-b873-e8c2d152dc1b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4e162a3f-e460-4c8b-89e6-e736b89a69d9</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="68410da7-61ed-4a5e-a7df-377a3a73cbb9"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.testSuite.setPropertyValue( "UpdatedName", uuid ) 











</script></con:config></con:testStep><con:testStep type="restrequest" name="Update" id="b5b214c0-4db7-4fe8-99ca-36231a1c7b82"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#UpdatedName}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="2e96fd3b-8f98-4daa-947d-c1df13511828"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Update#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("UpdatedName")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.testSuite.getPropertyValue("Id")







</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="337ff53d-4edd-484b-8890-4d4eae17f473" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="01c2028e-1c0e-4042-b052-f06923546f70"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Assert Created" id="21d3f1db-a183-4751-8917-2e564d3abf98"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4e162a3f-e460-4c8b-89e6-e736b89a69d9</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="Delete" id="c9337b77-0506-475b-aa8c-dc387221fca7"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4bf4b4dc-6e0b-4b9f-89c1-55106b33356f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="AssertDeleted ( GetById )" id="99ca085f-6a08-43fb-be7c-01ab2d034715"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AssertDeleted ( GetById )" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b0f117eb-aa68-41ee-bd7b-a7a9d65c4d96" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d7a33413-b698-4895-bf81-47092a86d8c6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAll" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="d756b2e8-3cb2-4ff3-82f5-9ff82ebd1812"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Entity1</con:name><con:value>b056bed1-f38c-4724-ae02-bb22b7d88499</con:value></con:property><con:property><con:name>Entity2</con:name><con:value>329ca303-1964-4194-9f2d-5475a4639d76</con:value></con:property><con:property><con:name>Entity3</con:name><con:value>3f07bc53-5687-4f19-983c-5c39ea86f1cb</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity1" id="71d14edc-7bcf-4e79-b34f-ad1a9b719f61"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity1" id="824e9b49-4683-44e2-9b37-0779a373c765"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity1</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity2" id="ce7a08fb-52b6-4256-9acd-7a4df6cc03f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity2" id="68c5fc85-9cfa-4631-b49e-87a30b2d9599"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity2</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity3" id="211b5d59-bc75-4736-b727-7c70962e1ae5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity3" id="f1b9f8d3-e83d-464f-a3ad-0f45c4fe77a2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity3</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetAll" id="d0d70567-176e-4043-8cac-9144ec7e4e15"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}" methodName="GetAll" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAll" id="264e557a-2377-406c-bd55-4cb399b8fb7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/bfedc82b-296c-415a-bac1-b1691a51bfe6</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c170debe-1907-48c7-b82c-29be79213eee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="db021b5e-b6dd-4774-9294-2db5e252abe4" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="47ddc41b-79a1-49fc-8aca-65f2bbc88a2a"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetAll#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 3 objects in the returned list
assert jsonResp.size() >= 3

//Assert the 3 inserted entities exists in the returned list
def entityIds = new String[3]
entityIds[0] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity1" )
entityIds[1] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity2" )
entityIds[2] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity3" )

def idList = [] 

for(item in jsonResp){
	idList.add(item.id)		
}

idList = idList.toSet()

assert idList.contains(entityIds[0])
assert idList.contains(entityIds[1])
assert idList.contains(entityIds[2])












</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fcb74ad1-8c2a-402b-a61e-80259fcae627" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchFields" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetSearchFields" id="25c55879-9c7d-439a-ab4f-d96fa1ee80ea"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/search/fields" methodName="GetSearchFields" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="17154947-409e-49c3-adc8-48647a2e96e8"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetSearchFields#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 1 objects in the returned list
//Assert at least 1 objects in the returned list
assert jsonResp.size() == 4

//Assert expected fields
def idList = jsonResp.toSet() 
idList = jsonResp.toSet()

assert idList.contains("services.name")
assert idList.contains("services.detail.name")
assert idList.contains("services.users.name")
assert idList.contains("name")
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>Id</con:name><con:value>9546f1e2-8cee-4354-b64b-ea5ea2a27d13</con:value></con:property><con:property><con:name>UpdatedName</con:name><con:value>e3074b00-50b0-4a88-828e-d9bd70095e6d</con:value></con:property><con:property><con:name>name</con:name><con:value>24a79bd5-36df-4cce-b76b-0f7f5d0a70b9</con:value></con:property></con:properties></con:testSuite><con:testSuite id="2302486f-7753-47ac-865e-c4d0144750f0" name="User Test"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c59d791a-28c1-4d2b-9f82-ed354658c009" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Create And Set Request Data" id="85dd38b7-0763-4beb-bba6-51dcaf0e5ed7"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.testSuite.setPropertyValue( "Name", uuid ) 










</script></con:config></con:testStep><con:testStep type="restrequest" name="Create" id="3da883a6-1203-46dc-8973-fd15108c1921"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#Name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check 200 is returned"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ab49d409-d824-4927-a3cb-45aa01f9e46b" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Returned Id As Parameter" id="45bae608-6cab-4b4d-bafd-3d9e1395a552"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput


// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Set the returned ID as a parameter
def jsonResp = new JsonSlurper().parseText(response)
testRunner.testCase.testSuite.setPropertyValue( "Id", jsonResp.id ) </script></con:config></con:testStep><con:testStep type="groovy" name="Assert Generic Data" id="7866ddda-0dd7-4ab1-b217-875e0737fc09"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert the returned id is a UUID
def id = jsonResp.id =~ /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
assert id.matches()

//Assert the returned date down to hours granuarity
def createdDate = new Date()
createdDate.setTime(jsonResp.updatedDate)
def parsedDate = createdDate.format("yyyy-MM-dd HH")

def nowDate = new Date().format("yyyy-MM-dd HH")

def createdAssertion = parsedDate =~ nowDate
assert createdAssertion.matches()





</script></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="7830f174-e028-4c0d-875e-ca554c45f462"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert the returned name
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("Name")







</script></con:config></con:testStep><con:testStep type="restrequest" name="Create With Same Name" id="022b21ed-d362-499e-a146-212c09be6bef"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create With Same Name" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#Name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check that name cannot be created again"><con:configuration><codes>500
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b8338fa5-a291-44c4-b78f-eaff1e954369" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetById" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Entity" id="0d5be193-f56f-4b2f-9284-5ed58057cd86"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="GetById" id="b746ec01-f87a-4698-b2a4-930ec959ee30"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/id</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="9e872c5a-8a93-4c6e-b970-5b7244603ce9"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetById#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("Name")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.testSuite.getPropertyValue("Id")







</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6542625e-4e16-44b3-adea-35c5281fed19" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="15e8ca9d-76fd-4d60-a958-3094d4cb65e3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Assert Created" id="1afedffd-0a36-41bf-ba27-6b9ea281b70f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b8338fa5-a291-44c4-b78f-eaff1e954369</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="557ae9c3-9d60-49c2-9d3e-eb181dab076c"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.testSuite.setPropertyValue( "UpdatedName", uuid ) 











</script></con:config></con:testStep><con:testStep type="restrequest" name="Update" id="676e696c-8905-45ba-860a-636824f5049d"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestSuite#UpdatedName}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="4d519f9d-a078-44d1-aa9f-16c96d31dc70"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Update#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.testSuite.getPropertyValue("UpdatedName")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.testSuite.getPropertyValue("Id")







</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="517a697e-6f20-4989-903b-1c4e047d2220" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="58416950-b526-44c4-bb9d-340613502bfb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Assert Created" id="71adebd8-d242-4c98-873f-8fc34f9a7e0d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b8338fa5-a291-44c4-b78f-eaff1e954369</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="Delete" id="28956f8d-1d5e-4c94-8008-491c4cc32925"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Assert Deleted ( GetById )" id="962478a0-cb62-4a33-803c-2a4d8588e8dc"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Assert Deleted ( GetById )" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b0f117eb-aa68-41ee-bd7b-a7a9d65c4d96" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f6946c34-d71a-4f07-b124-090974b7319b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAll" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a2ae1cd9-f96d-4f23-924c-cc6fed318d4e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Entity1</con:name><con:value>e750e002-0efe-4b5e-b4c9-dda7d66544a9</con:value></con:property><con:property><con:name>Entity2</con:name><con:value>2c667450-e688-4a09-bed5-4238d15d8b42</con:value></con:property><con:property><con:name>Entity3</con:name><con:value>3346a075-65c9-4f50-b97e-9adfc11166f3</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity1" id="f955b2b9-15c2-46a8-a10d-0aa7cc8671f6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity1" id="3abc34d9-1566-4e91-bf0b-5e1cb667ee11"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity1</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity2" id="d2fa3e4b-cb47-4094-8b7f-00e2aeb19c7e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity2" id="0f97d5af-ab76-48ed-939d-213ea3639076"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity2</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity3" id="15f30605-36cc-4fb8-a33b-59e89cc1a2e9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer - Entity3" id="ad3a9f03-a2d4-44eb-8103-e96a82f31ca2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Entity1- Id</con:name><con:sourceType>Id</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>Entity3</con:targetType><con:targetStep>Properties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetAll" id="cf560898-fa71-4940-884e-43d3873b88c7"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}" methodName="GetAll" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAll" id="264e557a-2377-406c-bd55-4cb399b8fb7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/bfedc82b-296c-415a-bac1-b1691a51bfe6</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c170debe-1907-48c7-b82c-29be79213eee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="db021b5e-b6dd-4774-9294-2db5e252abe4" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="25275671-1a89-436b-a22b-ab63cb074a57"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetAll#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 3 objects in the returned list
assert jsonResp.size() >= 3

//Assert the 3 inserted entities exists in the returned list
def entityIds = new String[3]
entityIds[0] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity1" )
entityIds[1] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity2" )
entityIds[2] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity3" )

def idList = [] 

for(item in jsonResp){
	idList.add(item.id)		
}

idList = idList.toSet()

assert idList.contains(entityIds[0])
assert idList.contains(entityIds[1])
assert idList.contains(entityIds[2])












</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a7043599-054b-407a-ac25-db5a18f346a2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchFields" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetSearchFields" id="461a581f-0e11-4969-81f6-d4e96ea48fa8"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/search/fields" methodName="GetSearchFields" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="cde592ea-a707-428e-8951-437e98dfe2e1"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetSearchFields#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 1 objects in the returned list
assert jsonResp.size() == 4

//Assert expected fields
def idList = jsonResp.toSet() 
idList = jsonResp.toSet()

assert idList.contains("services.name")
assert idList.contains("services.domain.name")
assert idList.contains("services.detail.name")
assert idList.contains("name")
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>Id</con:name><con:value>ecf74bfd-17bf-41e0-90a3-a6431fdc5e76</con:value></con:property><con:property><con:name>UpdatedName</con:name><con:value>1528fd25-89c6-4b34-8643-baa05e3509bd</con:value></con:property><con:property><con:name>name</con:name><con:value>f542a827-b85e-42d6-a820-c79e4fa7ebb4</con:value></con:property></con:properties></con:testSuite><con:testSuite id="f086c66d-a091-48df-8a2d-367e960ea122" name="Service-Domain Test ( ManyToOne )"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4ee2b928-9939-48a2-8b62-d1190af207f8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Domain To Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Service" id="731d8d34-7341-4419-96ad-ab20f8066561"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Domain" id="1fe8ee9a-88c7-4a76-b6a1-eafa7c72b54a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Extract ids" id="4e3fbd0c-7bac-4e89-98a8-7c2b37b68d2d"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//Get the service id from Service Test testsuite
def serviceTestSuite = testRunner.testCase.testSuite.project.testSuites['Service Test ( Inc OneToOne )']
testRunner.testCase.testSuite.setPropertyValue( "serviceid", serviceTestSuite.getPropertyValue('Id') ) 

//Get the domain id from Domain Test testsuite
def domainTestSuite = testRunner.testCase.testSuite.project.testSuites['Domain Test']
testRunner.testCase.testSuite.setPropertyValue( "domainid", domainTestSuite.getPropertyValue('Id') ) 










</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="dcfa4086-1e90-4aa2-b85a-480195a75a4b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setServiceId</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get ServiceById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setDomainId</con:name><con:sourceType>domainid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get DomainById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setServiceIdInRequest</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>getSErviceByIdWithDomain</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get ServiceById" id="afe4f986-0274-4229-8246-c7038040d1ad"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get ServiceById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="24d2d9d6-0e0b-4fc8-abad-d6270cd3a51b" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get DomainById" id="0a811e71-72f2-4c00-9aca-8a3f6000ecda"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get DomainById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/c57a50ef-063e-49b4-98c2-157f2b5354bd</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9a248932-9d11-43df-9b52-2154bce87b85" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="829b60cf-743c-4b49-afc2-8fb6629305d9" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON" id="849b01bb-12aa-400d-a214-87f16db0abc9"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get DomainById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = domainResp.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with Domain" id="375f7c17-6a6c-4678-96b9-882d8b3ce3c8"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "07d0e60d-947e-481c-9e5d-13a61e9e8530",
    "object": "domain",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="24d2d9d6-0e0b-4fc8-abad-d6270cd3a51b" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with Domain" id="99df4f63-548e-4e6c-b6f4-509b1e9e5c1d"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="24d2d9d6-0e0b-4fc8-abad-d6270cd3a51b" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Domain Attached" id="c11b7d06-fe98-437c-9243-ce4f5b94c889"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def addDomainResponse = context.expand('${ServiceById with Domain#Response}')

def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get DomainById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
def addDomainResp = jsonSlurper.parseText(addDomainResponse)

assert serviceResp.domain == null

assert addDomainResp.domain != null
assert addDomainResp.id == serviceResp.id
assert addDomainResp.domain.id == domainResp.id


</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9375eda1-02b6-46b6-95a7-e3c4595d4a49" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Replace Domain In Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Service And Add Domain" id="5b509032-a9a3-4c8e-91ae-d08cb073db68"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ee2b928-9939-48a2-8b62-d1190af207f8</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create new Domain" id="38b8dc84-33bf-494b-98c8-23b5fbce1631"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Extract id of new Domain" id="39f0a07f-5520-4676-a06e-243154a5cae1"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//Get the domain id from Domain Test testsuite
def domainTestSuite = testRunner.testCase.testSuite.project.testSuites['Domain Test']
testRunner.testCase.testSuite.setPropertyValue( "newDomainid", domainTestSuite.getPropertyValue('Id') ) 










</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer New Domain" id="a64c375b-2662-471e-a7de-4e6e20070aac"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ServiceIdUpdated</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>serviceById</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get ServiceById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetNewDomainID</con:name><con:sourceType>newDomainid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get New DomainById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetServiceByIdNewDomain</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get New DomainById" id="c4962744-2123-4af6-be61-99e70af5a081"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get New DomainById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/c57a50ef-063e-49b4-98c2-157f2b5354bd</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9a248932-9d11-43df-9b52-2154bce87b85" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="8593b401-d491-46b4-834d-c26fb1fc89e6" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get ServiceById" id="1dfa47ce-286b-40a2-b83f-92398a18473d"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get ServiceById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/1772f013-1db2-495a-969d-8bcb1f6c453f</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="d7162693-4ef0-453e-a480-2bdd1d36e9bb" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON new domain" id="f074ac24-edd4-4bcc-8879-fbe484ff30b3"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get New DomainById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = domainResp.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with New Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with New Domain" id="c6e24d47-ba60-4e04-8ccc-9e86c81595e8"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with New Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "8593b401-d491-46b4-834d-c26fb1fc89e6",
    "object": "domain",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="d7162693-4ef0-453e-a480-2bdd1d36e9bb" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with New Domain" id="b5a00add-851d-4828-aa26-ae2a57b6bc1d"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with New Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="d7162693-4ef0-453e-a480-2bdd1d36e9bb" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert New Domain Attached" id="1be0acf8-2b63-4a0a-b104-bdaa63c3f501"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def addedDomainResponse = context.expand('${ServiceById with New Domain#Response}')
def domainResponse = context.expand('${Get New DomainById#Response}')
//Parse response
def domainResp = jsonSlurper.parseText(domainResponse)
def addedDomainResp = jsonSlurper.parseText(addedDomainResponse)

def serviceid = testRunner.testCase.testSuite.getPropertyValue("serviceid") 
def newDomainId = testRunner.testCase.testSuite.getPropertyValue("newDomainid") 

assert addedDomainResp.domain != null
assert addedDomainResp.domain.id == domainResp.id
assert addedDomainResp.id == serviceid
assert addedDomainResp.domain.id == newDomainId






</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6ecc95cc-8503-48eb-b4e1-86124b5db4a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Domain In Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Service And Add Domain" id="9ba1842f-421e-4d62-a08e-d7dd7d438d4a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ee2b928-9939-48a2-8b62-d1190af207f8</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create new Domain" id="31753a24-db50-46ea-a62e-6f055e76b313"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Extract id of new Domain" id="887bc721-e71a-4868-b122-8ea6374cafac"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//Get the domain id from Domain Test testsuite
def domainTestSuite = testRunner.testCase.testSuite.project.testSuites['Domain Test']
testRunner.testCase.testSuite.setPropertyValue( "newDomainid", domainTestSuite.getPropertyValue('Id') ) 










</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer New Domain" id="1f7b0c9c-00ad-4915-a5cc-f62154c88e71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ServiceIdUpdated</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>serviceById</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get ServiceById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetNewDomainID</con:name><con:sourceType>newDomainid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get New DomainById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetServiceByIdNewDomain</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get New DomainById" id="cc278767-ed65-4b2c-a73a-7718380a2fe5"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get New DomainById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/c57a50ef-063e-49b4-98c2-157f2b5354bd</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9a248932-9d11-43df-9b52-2154bce87b85" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="31f0a410-1a84-4400-962c-351cf811e52b" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get ServiceById" id="d10c1b7c-d189-4341-b64b-a90c722b0a73"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get ServiceById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/1772f013-1db2-495a-969d-8bcb1f6c453f</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="fb767252-9264-49e8-b836-5be79f159369" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON new domain" id="a5fbab52-d2d9-41c1-b8e6-0bf758177206"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get New DomainById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = domainResp.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with New Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with New Domain" id="727a43ff-0bb3-4091-aefe-68022b2b9ddd"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with New Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "31f0a410-1a84-4400-962c-351cf811e52b",
    "object": "domain",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="fb767252-9264-49e8-b836-5be79f159369" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with New Domain" id="39377ff0-e8da-4faf-9c05-965e76a08020"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with New Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="fb767252-9264-49e8-b836-5be79f159369" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert New Domain Attached" id="390c5f0f-aa45-4f32-9fa5-7a1d11068efa"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def addedDomainResponse = context.expand('${ServiceById with New Domain#Response}')
def domainResponse = context.expand('${Get New DomainById#Response}')
//Parse response
def domainResp = jsonSlurper.parseText(domainResponse)
def addedDomainResp = jsonSlurper.parseText(addedDomainResponse)

def serviceid = testRunner.testCase.testSuite.getPropertyValue("serviceid") 
def newDomainId = testRunner.testCase.testSuite.getPropertyValue("newDomainid") 

assert addedDomainResp.domain != null
assert addedDomainResp.domain.id == domainResp.id
assert addedDomainResp.id == serviceid
assert addedDomainResp.domain.id == newDomainId






</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>serviceid</con:name><con:value>a04b6530-a1c2-4c84-a1ee-f6c057cd266f</con:value></con:property><con:property><con:name>domainid</con:name><con:value>9546f1e2-8cee-4354-b64b-ea5ea2a27d13</con:value></con:property><con:property><con:name>newDomainid</con:name><con:value>31f0a410-1a84-4400-962c-351cf811e52b</con:value></con:property></con:properties></con:testSuite><con:testSuite id="6b41f06b-4742-413f-8391-e83b671ace8b" name="Service-Users Test ( ManyToMany )"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ad821c29-f07f-4ca0-9370-080255b75bef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Users To Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Service" id="74ad7c37-1e2f-4969-86ad-94e9d5e20b4a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create User1" id="26c3fcae-bb47-48cf-b9a8-eba6bdbb0267"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Extract userId1" id="04ddd36d-abd9-4319-bafa-3bb5f7c851ca"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//Get the service id from Service Test testsuite
def serviceTestSuite = testRunner.testCase.testSuite.project.testSuites['Service Test ( Inc OneToOne )']
testRunner.testCase.testSuite.setPropertyValue( "serviceid", serviceTestSuite.getPropertyValue('Id') ) 

//Get the domain id from Domain Test testsuite
def domainTestSuite = testRunner.testCase.testSuite.project.testSuites['User Test']
testRunner.testCase.testSuite.setPropertyValue( "userid1", domainTestSuite.getPropertyValue('Id') ) 










</script></con:config></con:testStep><con:testStep type="calltestcase" name="Create User2" id="7e9cfefe-8e79-4406-9a63-9f96100721e0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c59d791a-28c1-4d2b-9f82-ed354658c009</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Extract userId2" id="b051990a-288e-418b-9b3f-68aece300b1e"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//Get the domain id from Domain Test testsuite
def domainTestSuite = testRunner.testCase.testSuite.project.testSuites['User Test']
testRunner.testCase.testSuite.setPropertyValue( "userid2", domainTestSuite.getPropertyValue('Id') ) 










</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="dc019090-368a-4379-b097-210638a72af5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setServiceId</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get ServiceById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setServiceIdInRequest</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with user1</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set userid1</con:name><con:sourceType>userid1</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get User1 ById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ser userid2</con:name><con:sourceType>userid2</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get User2 ById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>get serviceById with Users</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with Users</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set ServiceId In Request for user2</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with user2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get ServiceById" id="e42b3c27-35a2-47a2-ac4c-924dc30a044b"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get ServiceById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="07c642e1-868d-4fba-94bc-57651a51f242" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get User1 ById" id="e4aba9aa-ce37-462f-9b3f-3e3f6e66371f"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get User1 ById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/c57a50ef-063e-49b4-98c2-157f2b5354bd</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9a248932-9d11-43df-9b52-2154bce87b85" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="31c21746-6b06-4a5e-b38c-4063a7317cba" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get User2 ById" id="3927aef5-6f5c-496f-8c4d-56bc24d43105"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get User2 ById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/c57a50ef-063e-49b4-98c2-157f2b5354bd</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9a248932-9d11-43df-9b52-2154bce87b85" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="ecf74bfd-17bf-41e0-90a3-a6431fdc5e76" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON user1" id="c5f30e20-d349-4294-aeb7-0a486dd035cf"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get User1 ById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = testRunner.testCase.testSuite.getPropertyValue( "userid1") 
serviceUpdateRequest.object = "users"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with user1').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with user1" id="1de22ff6-7051-4ce4-a95f-b7b0104b358a"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with user1" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "31c21746-6b06-4a5e-b38c-4063a7317cba",
    "object": "users",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="07c642e1-868d-4fba-94bc-57651a51f242" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON user2" id="362fd82b-e909-4520-8e9f-ccd82a586a47"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get User1 ById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = testRunner.testCase.testSuite.getPropertyValue( "userid2") 
serviceUpdateRequest.object = "users"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with user2').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with user2" id="92583f2f-5a1a-44f3-a83f-545ba9d6631c"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with user2" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "ecf74bfd-17bf-41e0-90a3-a6431fdc5e76",
    "object": "users",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="07c642e1-868d-4fba-94bc-57651a51f242" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with Users" id="4bf7fed1-b4bc-4f4a-b794-65f604b86db8"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with Users" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="07c642e1-868d-4fba-94bc-57651a51f242" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Users Attached" id="8c2a76bf-df5c-4d2b-9c20-dc7fb38823b9"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceWithUsers = context.expand('${ServiceById with Users#Response}')
def serviceWithoutUsers = context.expand('${Get ServiceById#Response}')

def serviceid = testRunner.testCase.testSuite.getPropertyValue( "serviceid")
def userid1 = testRunner.testCase.testSuite.getPropertyValue( "userid1")
def userid2 = testRunner.testCase.testSuite.getPropertyValue( "userid2")

//Parse response
def serviceWithUsersResp = jsonSlurper.parseText(serviceWithUsers)
def serviceWithoutUsersResp = jsonSlurper.parseText(serviceWithoutUsers)


assert serviceWithoutUsersResp.users.size == 0

assert serviceWithUsersResp.users != null
assert serviceWithUsersResp.users.size() == 2

def usersList = serviceWithUsersResp.users

def user1 = usersList[0]
def user2 = usersList[1]

if(user1.id == userid1){
	assert user2.id == userid2
}else{
	assert user1.id == userid2
	assert user2.id == userid1
}






</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="612388aa-49f8-4e3e-aabf-90502edc452d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete User In Service" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Create Service And Add Domain" id="71822acc-149c-4370-a8b6-2a6f3c2ab7f2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>ad821c29-f07f-4ca0-9370-080255b75bef</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create new Domain" id="61ef7bc0-31e0-4f15-bca1-237f05fb1588"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>45455ffc-b3d8-4fdb-8f72-ae99ae070cf0</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Extract id of new Domain" id="fbfeff4d-e7a5-4e79-aa31-b486fd7427f4"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

//Get the domain id from Domain Test testsuite
def domainTestSuite = testRunner.testCase.testSuite.project.testSuites['Domain Test']
testRunner.testCase.testSuite.setPropertyValue( "newDomainid", domainTestSuite.getPropertyValue('Id') ) 










</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer New Domain" id="5c741fd6-b023-444f-93ac-dced74d649a1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ServiceIdUpdated</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>serviceById</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get ServiceById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetNewDomainID</con:name><con:sourceType>userid2</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Get New DomainById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetServiceByIdNewDomain</con:name><con:sourceType>serviceid</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Get New DomainById" id="75813298-3ae6-4409-a798-763018ffc3e0"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get New DomainById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/c57a50ef-063e-49b4-98c2-157f2b5354bd</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9a248932-9d11-43df-9b52-2154bce87b85" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="fe246364-4071-4de7-ade1-99cb4f3c48c5" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get ServiceById" id="de418c05-6439-4cf8-8003-b6e16c1fb458"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get ServiceById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/1772f013-1db2-495a-969d-8bcb1f6c453f</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="67880a49-a638-4686-96de-57e354a90260" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON new domain" id="5264d1a9-75c5-44e9-9542-68a671f28742"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Get ServiceById#Response}')
def domainResponse = context.expand('${Get New DomainById#Response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = domainResp.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with New Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with New Domain" id="7c9b62a2-9928-4bc5-bd55-ed25143270f0"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with New Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "b929a1e3-41e7-4389-994c-8d3db6fedfba",
    "object": "domain",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="67880a49-a638-4686-96de-57e354a90260" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with New Domain" id="49c25665-0b6b-44db-b796-0a0e931da2ac"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with New Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="67880a49-a638-4686-96de-57e354a90260" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert New Domain Attached" id="51ed463b-7e0e-45f1-85b2-717ab1c307f4"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def addedDomainResponse = context.expand('${ServiceById with New Domain#Response}')
def domainResponse = context.expand('${Get New DomainById#Response}')
//Parse response
def domainResp = jsonSlurper.parseText(domainResponse)
def addedDomainResp = jsonSlurper.parseText(addedDomainResponse)

def serviceid = testRunner.testCase.testSuite.getPropertyValue("serviceid") 
def newDomainId = testRunner.testCase.testSuite.getPropertyValue("newDomainid") 

assert addedDomainResp.domain != null
assert addedDomainResp.domain.id == domainResp.id
assert addedDomainResp.id == serviceid
assert addedDomainResp.domain.id == newDomainId






</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>serviceid</con:name><con:value>07c642e1-868d-4fba-94bc-57651a51f242</con:value></con:property><con:property><con:name>userid1</con:name><con:value>31c21746-6b06-4a5e-b38c-4063a7317cba</con:value></con:property><con:property><con:name>userid2</con:name><con:value>ecf74bfd-17bf-41e0-90a3-a6431fdc5e76</con:value></con:property><con:property><con:name>newDomainid</con:name><con:value>65eccd81-260b-4fed-9928-ec1225caa88a</con:value></con:property></con:properties></con:testSuite><con:testSuite id="a985785e-1a79-43f0-9b71-1d8364fd8344" name="Search Test" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="dfebcb79-2536-4018-bd01-722735e63218" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Service Filtered List" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetFilteredList" id="2aa4061c-aec2-4cde-af76-69715dbb8e28"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/list" methodName="GetFilteredList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name", "domain.name", "users.name", "detail.name"],
	"pagination":{
		"listSize":5,
		"page":0
		},
	"globalSearchWord":"*"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f9a0cdc2-9b96-4a4b-8bc2-b8da91c4b03d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Domain Filtered List" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetFilteredList" id="12bb3aeb-8853-47c7-9f65-92711798f95c"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/list" methodName="GetFilteredList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["services.name", "services.detail.name", "name", "services.users.name"],
	"pagination":{
		"listSize":10,
		"page":0
		},
	"globalSearchWord":"*"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dab77770-f97e-4678-bf73-423c08bcced1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User Filtered List" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>DomainName</con:name><con:value>service-parent-1.0-SNAPSHOT</con:value></con:property><con:property><con:name>ServiceName</con:name><con:value>service-parent</con:value></con:property><con:property><con:name>ServiceName2</con:name><con:value>domain</con:value></con:property><con:property><con:name>ServiceName3</con:name><con:value>user</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>