<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4c35a2a0-f722-40f7-bc81-7bbcc47092ef" activeEnvironment="Default" name="Service archetype" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormBase Path"/><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormTarget Folder">C:\Users\Programmering\Desktop</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormFormat">json</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormAPI Version">1.0</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormSwagger Version">2.0</con:setting></con:settings><con:interface xsi:type="con:RestService" id="d763a7c9-f981-4c25-869e-96cb26793207" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://192.168.2.140:8082" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://192.168.2.140:8082</con:endpoint></con:endpoints><con:resource name="Service" path="/${#Project#DomainName}/rest/${#Project#ServiceName}" id="34e98a8f-09c7-43c1-987a-b95a28b5bba9"><con:settings/><con:parameters/><con:resource name="{id}" path="{id}" id="d80d0a59-e766-4b1d-8f07-520dfab94d8e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Delete" id="01ceb004-519e-4ef1-a6d3-a817927a9225" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="2bdc747e-e009-4e6c-8be2-4d58ef46007a" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service/">ser:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetById" id="def7547b-e616-4884-934f-0879c3cf3a30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/1772f013-1db2-495a-969d-8bcb1f6c453f</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="1772f013-1db2-495a-969d-8bcb1f6c453f" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="SearchFields" path="search/fields" id="f11c3452-67af-4523-997f-41ec7997a2ff"><con:settings/><con:parameters/><con:method name="GetSearchFields" id="10eb7e6b-22d8-4694-9879-d26c8e05fc19" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="List" path="list" id="14c2ef5c-1bbd-4a71-8a56-a30fcd38345e"><con:settings/><con:parameters/><con:method name="GetFilteredList" id="42e42f4f-d8ad-42d4-a590-3756c4149ba7" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name", "domain.name", "users.name", "serviceDetail.name"],
	"pagination":{
		"listSize":10,
		"page":0
		},
	"globalSearchWord":"*"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Index" path="index" id="9d0b3d5f-c6cd-4366-9289-8d58f2f66803"><con:settings/><con:parameters/><con:method name="Index Lucene" id="40ed6771-94e3-4295-9c00-82cb9282303e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Index Lucene" id="3320ba69-f2c6-4c35-a5b2-4bd45ac15784" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/index</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="{id}" path="update/{id}" id="9d77d85f-0b01-4b5c-821b-a294a1e331e0"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="updateObject" id="1ae1507f-14a7-4c5c-a826-19c9fb7794ab" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400 405</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:e93="http://192.168.2.140/service-parent/rest/service-parent/update/44e9385b-19dd-4a30-b79e-095da341bbfa">e93:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="updateObject" id="97be0246-17d0-463f-be99-12e10b1d6104" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"objectId":"5f7b7306-7099-4576-8298-cd10bab4bee0",
	"object":"domain",
	"type":"ADD"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/update/44e9385b-19dd-4a30-b79e-095da341bbfa</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="2fa71586-ecd4-4cda-814d-fc9ad81f8ca4" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="GetAll" id="2681b6c0-3349-4bc5-9784-10f2f1d581df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetAll" id="45020183-5255-4fda-a66c-ca5a5e1144b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzIwNDY4LCJleHAiOjE1MDI3MjEzNjh9.LvQaQGrXpbvCvIfJg6jV4trReTtsD-fS354pdkUPUwlvMv35UAHif13_z8iAZRUBTOVtOUbLlTLMu9jheODA3g" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="3bad21c8-c78a-4409-8842-86f3d250b3f6" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service">ser:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#Project#name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="Domain" path="/${#Project#DomainName}/rest/${#Project#ServiceName2}" id="34e98a8f-09c7-43c1-987a-b95a28b5bba9"><con:settings/><con:parameters/><con:resource name="{id}" path="{id}" id="d80d0a59-e766-4b1d-8f07-520dfab94d8e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Delete" id="01ceb004-519e-4ef1-a6d3-a817927a9225" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="2bdc747e-e009-4e6c-8be2-4d58ef46007a" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service/">ser:Response</con:element></con:representation><con:request name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetById" id="def7547b-e616-4884-934f-0879c3cf3a30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="SearchFields" path="search/fields" id="f11c3452-67af-4523-997f-41ec7997a2ff"><con:settings/><con:parameters/><con:method name="GetSearchFields" id="10eb7e6b-22d8-4694-9879-d26c8e05fc19" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="List" path="list" id="14c2ef5c-1bbd-4a71-8a56-a30fcd38345e"><con:settings/><con:parameters/><con:method name="GetFilteredList" id="42e42f4f-d8ad-42d4-a590-3756c4149ba7" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name"],
	"pagination":{
		"listSize":40,
		"page":0
		},
	"globalSearchWord":"Service1"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Index" path="index" id="9d0b3d5f-c6cd-4366-9289-8d58f2f66803"><con:settings/><con:parameters/><con:method name="Index Lucene" id="40ed6771-94e3-4295-9c00-82cb9282303e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Index Lucene" id="3320ba69-f2c6-4c35-a5b2-4bd45ac15784" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/index</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GetAll" id="2681b6c0-3349-4bc5-9784-10f2f1d581df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetAll" id="45020183-5255-4fda-a66c-ca5a5e1144b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="3bad21c8-c78a-4409-8842-86f3d250b3f6" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service">ser:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#Project#name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="User" path="/${#Project#DomainName}/rest/${#Project#ServiceName3}" id="34e98a8f-09c7-43c1-987a-b95a28b5bba9"><con:settings/><con:parameters/><con:resource name="{id}" path="{id}" id="d80d0a59-e766-4b1d-8f07-520dfab94d8e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="Delete" id="01ceb004-519e-4ef1-a6d3-a817927a9225" method="DELETE"><con:settings/><con:parameters/><con:request name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="2bdc747e-e009-4e6c-8be2-4d58ef46007a" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service/">ser:Response</con:element></con:representation><con:request name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetById" id="def7547b-e616-4884-934f-0879c3cf3a30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings/><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="SearchFields" path="search/fields" id="f11c3452-67af-4523-997f-41ec7997a2ff"><con:settings/><con:parameters/><con:method name="GetSearchFields" id="10eb7e6b-22d8-4694-9879-d26c8e05fc19" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="List" path="list" id="14c2ef5c-1bbd-4a71-8a56-a30fcd38345e"><con:settings/><con:parameters/><con:method name="GetFilteredList" id="42e42f4f-d8ad-42d4-a590-3756c4149ba7" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name"],
	"pagination":{
		"listSize":40,
		"page":0
		},
	"globalSearchWord":"Service1"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Index" path="index" id="9d0b3d5f-c6cd-4366-9289-8d58f2f66803"><con:settings/><con:parameters/><con:method name="Index Lucene" id="40ed6771-94e3-4295-9c00-82cb9282303e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Index Lucene" id="3320ba69-f2c6-4c35-a5b2-4bd45ac15784" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/index</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GetAll" id="2681b6c0-3349-4bc5-9784-10f2f1d581df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GetAll" id="45020183-5255-4fda-a66c-ca5a5e1144b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="3bad21c8-c78a-4409-8842-86f3d250b3f6" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ser="http://192.168.2.140/service/rest/service">ser:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#Project#name}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6998a10c-efe5-403c-9b3c-a812ae2e0b14" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://192.168.2.140:8082" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://192.168.2.140:8082</con:endpoint></con:endpoints><con:resource name="Login" path="/service-parent-1.0-SNAPSHOT/rest/auth/login" id="794d71cd-8022-4c72-a572-6169613fed4e"><con:settings/><con:parameters/><con:method name="Login 1" id="10d4cdac-380f-4f16-8e73-84213e25f428" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="login" id="4aae4b62-0520-4a90-b7ec-e28d33809daf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent-1.0-SNAPSHOT/rest/auth/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="7079416b-b5db-4723-ba00-9c139f104f4f" name="Service Test ( Inc OneToOne )"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2ded9caf-0f51-42b8-a6dc-33572bda19f4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="593c5fe8-3da1-4401-89cc-f7cae13099fd"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/service-parent-1.0-SNAPSHOT/rest/auth/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="4aae4b62-0520-4a90-b7ec-e28d33809daf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent-1.0-SNAPSHOT/rest/auth/login</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e317c490-514c-415e-b634-249feae1322f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Global Auth Header Value" id="075e016e-da3b-4da4-b5a7-4b3d00336cd3"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def headerValue = testRunner.testCase.getTestStepByName("Login").httpRequest.response.responseHeaders["Authorization"] as String

headerValue = headerValue.replaceAll("\\[", "").replaceAll("\\]","");

testRunner.testCase.setPropertyValue( "HeaderValue", headerValue ) 
</script></con:config></con:testStep><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzIyLCJleHAiOjE1MDI3OTM2MjJ9.YeaBzMPOkRUQ_i9zDZzFDl88i18WvIDXu_KtBezz7G7phokbTym81vToVRNsJGpsBLTyVj7uVRvk9HecKGF16w</con:value></con:property></con:properties></con:testCase><con:testCase id="f784c9a7-951e-402b-851f-8d8831112d58" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="61b5105c-58c9-4f0d-bb47-f1b30daac429"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzIyLCJleHAiOjE1MDI3OTM2MjJ9.YeaBzMPOkRUQ_i9zDZzFDl88i18WvIDXu_KtBezz7G7phokbTym81vToVRNsJGpsBLTyVj7uVRvk9HecKGF16w</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e7322383-8e72-46fa-ac76-f73f4c51e33e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="38a4e78b-acf8-42ce-b834-99d46f7d694d"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String
testRunner.testCase.setPropertyValue( "name", uuid ) 

uuid = randomUUID() as String
testRunner.testCase.setPropertyValue( "serviceDetailName", uuid ) 
 










</script></con:config></con:testStep><con:testStep type="restrequest" name="Create" id="626e507d-5e6a-4cb5-bc30-06ebf0464653"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"name":"${#TestCase#name}",
	"detail":{
         "name": "${#TestCase#serviceDetailName}"
      }
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check 200 is returned"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ab49d409-d824-4927-a3cb-45aa01f9e46b" name="Response SLA" disabled="true"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Create" id="6abdb110-ce49-4658-a3db-c0ec8a4d47fb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setResponse</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set ResponseID" id="104d8dc1-e362-48a6-87e1-41ae793c7817"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#response}')
def jsonResp = new JsonSlurper().parseText(response)

testRunner.testCase.setPropertyValue("id",jsonResp.id )</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>923914d7-6ccf-459c-85b5-a89876da9d0e</con:value></con:property><con:property><con:name>name</con:name><con:value>f0eb88ea-ae2b-4f3d-b11a-bed811a71615</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzIyLCJleHAiOjE1MDI3OTM2MjJ9.YeaBzMPOkRUQ_i9zDZzFDl88i18WvIDXu_KtBezz7G7phokbTym81vToVRNsJGpsBLTyVj7uVRvk9HecKGF16w</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"923914d7-6ccf-459c-85b5-a89876da9d0e","updatedDate":1502792722955,"name":"f0eb88ea-ae2b-4f3d-b11a-bed811a71615","detail":{"id":"923914d7-6ccf-459c-85b5-a89876da9d0e","updatedDate":1502792722955,"name":"4d40d5cb-5893-4a23-ab73-4691806c1745"},"domain":null,"users":[]}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>4d40d5cb-5893-4a23-ab73-4691806c1745</con:value></con:property></con:properties></con:testCase><con:testCase id="46160377-fa2b-4267-8db7-4aa31f4e8757" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetById" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="88a54f85-b538-4472-b24a-3adcef1c16e3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>b8ebff7b-fe24-4292-9880-2c7f763ed8cb</con:value></con:property><con:property><con:name>name</con:name><con:value>21647c3c-761f-4f6e-9739-b2514d746c8c</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzIzLCJleHAiOjE1MDI3OTM2MjN9.2WImjMcqiqu6GchuudNNpifkIBW6yfYHi22qSm0ew0Yva97uY3ru4uZRKP-LysrnaJ7whHocrJ884P7ivmpSuA</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"b8ebff7b-fe24-4292-9880-2c7f763ed8cb","updatedDate":1502792723738,"name":"21647c3c-761f-4f6e-9739-b2514d746c8c","detail":{"id":"b8ebff7b-fe24-4292-9880-2c7f763ed8cb","updatedDate":1502792723738,"name":"0d70eae7-9ff3-4faa-9673-0c7a4afaaadc"},"domain":null,"users":[]}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>0d70eae7-9ff3-4faa-9673-0c7a4afaaadc</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="5481f497-6e50-47bc-ab8a-2851437e8dcc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI0LCJleHAiOjE1MDI3OTM2MjR9.bvVmw29z-F6rx3OcgQQqkSAdPn0z6oMRNi6-y4aFbdg8tOeOirv-6lakxUNZhHgjeL_4RllxZAfW3S0j6ZGanA</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7a4dee74-fd53-4c27-bb5c-20c358c3b179"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setCreatedName</con:name><con:sourceType>name</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set CreatedID</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set serviceDetailName</con:name><con:sourceType>serviceDetailName</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdServiceDetailName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Set Id" id="6581f99e-83b5-4cfb-ba74-98e8375fe48e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set Get ById:id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>GetById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetById" id="f0c986d4-d5ba-4b0d-a063-b36b66974017"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/id</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="b8ebff7b-fe24-4292-9880-2c7f763ed8cb" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="b16ed2d0-8752-4c8b-a93a-6b88ca4fc277"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetById#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.getPropertyValue("createdName")
assert jsonResp.detail.name == testRunner.testCase.getPropertyValue("createdServiceDetailName")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.getPropertyValue("createdId")
assert jsonResp.domain == null
assert jsonResp.users.size() == 0







</script></con:config></con:testStep><con:testStep type="transfer" name="TRansfer response" id="b69603e0-15a3-425b-a5af-4fec3bf416be"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Transfer response</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetById</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI0LCJleHAiOjE1MDI3OTM2MjR9.bvVmw29z-F6rx3OcgQQqkSAdPn0z6oMRNi6-y4aFbdg8tOeOirv-6lakxUNZhHgjeL_4RllxZAfW3S0j6ZGanA</con:value></con:property><con:property><con:name>createdName</con:name><con:value>21647c3c-761f-4f6e-9739-b2514d746c8c</con:value></con:property><con:property><con:name>createdId</con:name><con:value>b8ebff7b-fe24-4292-9880-2c7f763ed8cb</con:value></con:property><con:property><con:name>createdServiceDetailName</con:name><con:value>0d70eae7-9ff3-4faa-9673-0c7a4afaaadc</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"b8ebff7b-fe24-4292-9880-2c7f763ed8cb","updatedDate":1502792723000,"name":"21647c3c-761f-4f6e-9739-b2514d746c8c","detail":{"id":"b8ebff7b-fe24-4292-9880-2c7f763ed8cb","updatedDate":1502792723000,"name":"0d70eae7-9ff3-4faa-9673-0c7a4afaaadc"},"domain":null,"users":[]}</con:value></con:property></con:properties></con:testCase><con:testCase id="d809f2af-6c9b-4276-a540-e7ec76a4298c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="fed2fbe4-843f-4eb5-8666-c85dc0c5aac8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>7fdb3400-0172-47ce-bfc1-0fdd60948952</con:value></con:property><con:property><con:name>name</con:name><con:value>24f4644d-116a-42b9-bccc-61e995730f18</con:value></con:property><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI0LCJleHAiOjE1MDI3OTM2MjR9.bvVmw29z-F6rx3OcgQQqkSAdPn0z6oMRNi6-y4aFbdg8tOeOirv-6lakxUNZhHgjeL_4RllxZAfW3S0j6ZGanA</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"7fdb3400-0172-47ce-bfc1-0fdd60948952","updatedDate":1502792724356,"name":"24f4644d-116a-42b9-bccc-61e995730f18","detail":{"id":"7fdb3400-0172-47ce-bfc1-0fdd60948952","updatedDate":1502792724356,"name":"595fcdfe-c0bc-4da7-9cb5-bcd166d350f9"},"domain":null,"users":[]}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>595fcdfe-c0bc-4da7-9cb5-bcd166d350f9</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="943930bc-b169-45e4-8d58-a3f5f0874bc7"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.setPropertyValue( "updatedName", uuid ) 











</script></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="37c4a65a-50da-46f1-84ba-c87cd4b0ff89"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI0LCJleHAiOjE1MDI3OTM2MjR9.bvVmw29z-F6rx3OcgQQqkSAdPn0z6oMRNi6-y4aFbdg8tOeOirv-6lakxUNZhHgjeL_4RllxZAfW3S0j6ZGanA</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="8b39be4e-4705-4b7c-b801-745d7a149048"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set Id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Update" id="956764b7-fb38-4126-9d19-aa85672f7aa8"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestCase#updatedName}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c10543d7-8a77-4825-83b6-c6bbc3c4541b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="7fdb3400-0172-47ce-bfc1-0fdd60948952" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="b0977c57-49d2-44d2-94e3-641d321bb0cf"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Update#Response}')
def createResponse = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)
def createResp = new JsonSlurper().parseText(createResponse)

//Assert correct name is returned
assert jsonResp.name != createResp.name
assert jsonResp.name == testRunner.testCase.getPropertyValue("updatedName")

//Assert correct id is returned
assert jsonResp.id == createResp.id
assert jsonResp.detail != null








</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI0LCJleHAiOjE1MDI3OTM2MjR9.bvVmw29z-F6rx3OcgQQqkSAdPn0z6oMRNi6-y4aFbdg8tOeOirv-6lakxUNZhHgjeL_4RllxZAfW3S0j6ZGanA</con:value></con:property><con:property><con:name>updatedName</con:name><con:value>eaa0f11a-1a84-46d6-ab70-1c97f1fa0404</con:value></con:property></con:properties></con:testCase><con:testCase id="907026a7-f16f-48e4-b734-fb9bf4a47955" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="c9f6ab82-d8c2-4042-a459-83cdb1225e64"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="2ea10530-d3aa-4217-b288-f2d1ab390f7e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI1LCJleHAiOjE1MDI3OTM2MjV9.9HQQB-LfqLDEBv0LL5-tldSTTGV7ZXxzaKLlnupf3hhNgNzsyqBuNrY5_hNJ8SdhtrNKnphfe-7KuOaXYleWNg</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="aba13c91-46bd-45de-9aae-5d0b31532e58"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set Deletion ID</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Delete</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SEt Assertion Id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Assert Deleted ( GetById )</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Delete" id="5c2055cb-e9d9-4494-9668-be3a5b8283b7"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Assert Deleted ( GetById )" id="0a9f6ebd-013f-42a1-845e-c18a15d3dd57"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Assert Deleted ( GetById )" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b0f117eb-aa68-41ee-bd7b-a7a9d65c4d96" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI1LCJleHAiOjE1MDI3OTM2MjV9.9HQQB-LfqLDEBv0LL5-tldSTTGV7ZXxzaKLlnupf3hhNgNzsyqBuNrY5_hNJ8SdhtrNKnphfe-7KuOaXYleWNg</con:value></con:property></con:properties></con:testCase><con:testCase id="160cacf1-1f96-4047-b2a7-59e773b599a9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAll" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Entity1" id="be494bcf-13a7-43eb-ad49-a0fa576ba748"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>f5e3a201-1fc3-4ce5-baee-f6ea7bd25aa1</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity2" id="019f2625-1d7a-4ecc-bbbb-ee635a646759"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>bdeef007-8fbf-49de-ab5a-18fa9ddf10e8</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity3" id="dcb490c0-34ae-42cc-8db1-3771b065cbeb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>c382ca00-6523-4152-b589-29900174f39b</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="1342c5c7-a264-4b94-93ec-ee4318c79115"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7d640edd-f938-45fc-96ea-cc631937dcd2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId1</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity1</con:sourceStep><con:targetType>Entity1</con:targetType><con:targetStep>Properties</con:targetStep><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId2</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity2</con:sourceStep><con:targetType>Entity2</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId3</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity3</con:sourceStep><con:targetType>Entity3</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="42126efd-2c55-4e3a-983b-8d11cb0f22bc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Entity1</con:name><con:value>f5e3a201-1fc3-4ce5-baee-f6ea7bd25aa1</con:value></con:property><con:property><con:name>Entity2</con:name><con:value>bdeef007-8fbf-49de-ab5a-18fa9ddf10e8</con:value></con:property><con:property><con:name>Entity3</con:name><con:value>c382ca00-6523-4152-b589-29900174f39b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GetAll" id="18ab2def-846e-4c81-b069-7b6f8e2ed0f4"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}" methodName="GetAll" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAll" id="264e557a-2377-406c-bd55-4cb399b8fb7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/bfedc82b-296c-415a-bac1-b1691a51bfe6</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c170debe-1907-48c7-b82c-29be79213eee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="db021b5e-b6dd-4774-9294-2db5e252abe4" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="73eddb84-abe6-425f-82a4-c44a99134e00"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetAll#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 3 objects in the returned list
assert jsonResp.size() >= 3

//Assert the 3 inserted entities exists in the returned list
def entityIds = new String[3]
entityIds[0] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity1" )
entityIds[1] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity2" )
entityIds[2] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity3" )

def idList = [] 

for(item in jsonResp){
	idList.add(item.id)		
}

idList = idList.toSet()

assert idList.contains(entityIds[0])
assert idList.contains(entityIds[1])
assert idList.contains(entityIds[2])












</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property></con:properties></con:testCase><con:testCase id="56498e5d-802e-436b-a5b2-9f7f9193e55d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchFields" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="52b638ed-cac1-457e-b018-d9b861605dc3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="50d795d9-c124-4777-a993-0063bedb2828"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetSearchFields" id="ab5bdebd-d5f4-4ce7-bc7d-74d46adb40cf"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/search/fields" methodName="GetSearchFields" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="48ad2e6f-230b-4242-b1f2-6295c9a71d16"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetSearchFields#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 1 objects in the returned list
assert jsonResp.size() == 4

//Assert expected fields
def idList = jsonResp.toSet() 
idList = jsonResp.toSet()

assert idList.contains("name")
assert idList.contains("users.name")
assert idList.contains("domain.name")
assert idList.contains("name")
</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="8aee4e19-7b8f-4cb9-ac9d-b458d29a2097" name="Domain Test"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="77bda682-0898-409a-b576-8bd6c856d5c6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="ed60d7bf-2c13-4ca4-a347-fb6acbc563f3"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/service-parent-1.0-SNAPSHOT/rest/auth/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="4aae4b62-0520-4a90-b7ec-e28d33809daf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent-1.0-SNAPSHOT/rest/auth/login</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e317c490-514c-415e-b634-249feae1322f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Global Auth Header Value" id="3c32b63c-c64f-4ee7-bf9b-b693ecae67ff"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def headerValue = testRunner.testCase.getTestStepByName("Login").httpRequest.response.responseHeaders["Authorization"] as String

headerValue = headerValue.replaceAll("\\[", "").replaceAll("\\]","");

testRunner.testCase.setPropertyValue( "HeaderValue", headerValue ) 
</script></con:config></con:testStep><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property></con:properties></con:testCase><con:testCase id="bf6da687-c149-4b03-b1ea-2e44dd0c74e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="b3e26ab1-755b-435d-b594-27a87016d8d3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>77bda682-0898-409a-b576-8bd6c856d5c6</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d2f2fb37-56ee-4cf8-a8d2-8e24ae76c40b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="d861c85a-9f85-4cdd-a850-da25134d89fa"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String
testRunner.testCase.setPropertyValue( "name", uuid ) 

uuid = randomUUID() as String
testRunner.testCase.setPropertyValue( "serviceDetailName", uuid ) 
 










</script></con:config></con:testStep><con:testStep type="restrequest" name="Create" id="86a423db-156f-48c3-85a7-da85f6ab3b87"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"name":"${#TestCase#name}"	
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check 200 is returned"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ab49d409-d824-4927-a3cb-45aa01f9e46b" name="Response SLA" disabled="true"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Create" id="65b43edb-7b39-4fbe-ae5f-bfa844f54485"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setResponse</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set ResponseID" id="55c9a49b-28b6-4950-b129-3252fd8bf734"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#response}')
def jsonResp = new JsonSlurper().parseText(response)

testRunner.testCase.setPropertyValue("id",jsonResp.id )</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>88926764-d8c6-4bb6-b976-a0af7a98a566</con:value></con:property><con:property><con:name>name</con:name><con:value>1cc9347f-50c9-4fb0-8d08-f4ce6080d2ab</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI4LCJleHAiOjE1MDI3OTM2Mjh9.N0ocMxA0MixdUGjLH3AxZfL6KbSWwkigP3FERz92bVGgJm7CFLl8RMe4ISONSEIqm-YZicJy1LDQGGrqCHy0Vw</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"88926764-d8c6-4bb6-b976-a0af7a98a566","updatedDate":1502792728935,"name":"1cc9347f-50c9-4fb0-8d08-f4ce6080d2ab"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>1b24e6f6-3d7e-4a61-8a0e-195286264a3a</con:value></con:property></con:properties></con:testCase><con:testCase id="5604824d-f902-40d9-90d3-81b16844f0fd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetById" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="75eb9554-ab40-4daf-89cf-001d8dfbfad4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>4d316fdc-0ce9-4e4e-9119-828325365ca2</con:value></con:property><con:property><con:name>name</con:name><con:value>28c4b8e8-7c36-4636-87ca-9734cf545e5e</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI5LCJleHAiOjE1MDI3OTM2Mjl9.sCIULQvznoRoBhGOb1gI-XPaJArdEn1ubV7tM-eNUJOh6Ibh72Q8H6Qvb82JFXb22-IlYj9OgKYmAauJ5k-_JA</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"4d316fdc-0ce9-4e4e-9119-828325365ca2","updatedDate":1502792729399,"name":"28c4b8e8-7c36-4636-87ca-9734cf545e5e"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>26811427-e541-472d-8941-c7373ad49a73</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="e86385b8-bcbb-4580-aae0-16fd1bec6614"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>77bda682-0898-409a-b576-8bd6c856d5c6</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI5LCJleHAiOjE1MDI3OTM2Mjl9.sCIULQvznoRoBhGOb1gI-XPaJArdEn1ubV7tM-eNUJOh6Ibh72Q8H6Qvb82JFXb22-IlYj9OgKYmAauJ5k-_JA</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="01038a21-e4c4-4a4f-8021-3ad6c6a78bf8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setCreatedName</con:name><con:sourceType>name</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set CreatedID</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set serviceDetailName</con:name><con:sourceType>serviceDetailName</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdServiceDetailName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Set Id" id="c3689e1a-2612-4ad2-bf18-06ba2c86cf80"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set Get ById:id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>GetById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetById" id="66d8e17b-2589-4f53-b483-689864a90ffb"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/id</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="4d316fdc-0ce9-4e4e-9119-828325365ca2" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="76d9f3b3-27be-41dc-ae49-e887e4adfac6"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetById#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.getPropertyValue("createdName")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.getPropertyValue("createdId")








</script></con:config></con:testStep><con:testStep type="transfer" name="TRansfer response" id="99d75be4-e62d-4cf8-bcb9-1fb5ddc49b83"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Transfer response</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetById</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI5LCJleHAiOjE1MDI3OTM2Mjl9.sCIULQvznoRoBhGOb1gI-XPaJArdEn1ubV7tM-eNUJOh6Ibh72Q8H6Qvb82JFXb22-IlYj9OgKYmAauJ5k-_JA</con:value></con:property><con:property><con:name>createdName</con:name><con:value>28c4b8e8-7c36-4636-87ca-9734cf545e5e</con:value></con:property><con:property><con:name>createdId</con:name><con:value>4d316fdc-0ce9-4e4e-9119-828325365ca2</con:value></con:property><con:property><con:name>createdServiceDetailName</con:name><con:value>26811427-e541-472d-8941-c7373ad49a73</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"4d316fdc-0ce9-4e4e-9119-828325365ca2","updatedDate":1502792729000,"name":"28c4b8e8-7c36-4636-87ca-9734cf545e5e"}</con:value></con:property></con:properties></con:testCase><con:testCase id="460ad307-3ce4-44c0-bec7-6cff1d1ccf87" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="f84b47fa-c26e-4000-a2e6-a4efa1344ada"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>d16783f2-55fd-4e7f-bff5-48127c275c13</con:value></con:property><con:property><con:name>name</con:name><con:value>e3c2cf09-480b-4b88-af3f-9c8e17d03e8b</con:value></con:property><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzI5LCJleHAiOjE1MDI3OTM2Mjl9.sCIULQvznoRoBhGOb1gI-XPaJArdEn1ubV7tM-eNUJOh6Ibh72Q8H6Qvb82JFXb22-IlYj9OgKYmAauJ5k-_JA</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"d16783f2-55fd-4e7f-bff5-48127c275c13","updatedDate":1502792729771,"name":"e3c2cf09-480b-4b88-af3f-9c8e17d03e8b"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>835eba6d-0e9f-42cb-8419-23a5268dda46</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="e0ba1be0-59de-4127-97e6-1949e372f6f3"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.setPropertyValue( "updatedName", uuid ) 











</script></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="dd5099fe-8276-407b-b540-5fd1121fdd8a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>77bda682-0898-409a-b576-8bd6c856d5c6</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMwLCJleHAiOjE1MDI3OTM2MzB9.iexmGrV4GKR-yvsiTy3dc5vp6KkrRaeOXeeRGRoRql8NN0Q9XZGx3sKDCXbhWwd8HYWsWSLXlWG40q6Gs9Ub_A</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7e25c5a1-ea81-4a7f-be05-d8f8e406a9e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set Id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Update" id="6b5a3ba1-1ff6-4e5d-b44e-06413b425cca"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestCase#updatedName}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c10543d7-8a77-4825-83b6-c6bbc3c4541b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="d16783f2-55fd-4e7f-bff5-48127c275c13" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="22670416-c263-4a01-9a84-16faff9a2600"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Update#Response}')
def createResponse = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)
def createResp = new JsonSlurper().parseText(createResponse)

//Assert correct name is returned
assert jsonResp.name != createResp.name
assert jsonResp.name == testRunner.testCase.getPropertyValue("updatedName")

//Assert correct id is returned
assert jsonResp.id == createResp.id









</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMwLCJleHAiOjE1MDI3OTM2MzB9.iexmGrV4GKR-yvsiTy3dc5vp6KkrRaeOXeeRGRoRql8NN0Q9XZGx3sKDCXbhWwd8HYWsWSLXlWG40q6Gs9Ub_A</con:value></con:property><con:property><con:name>updatedName</con:name><con:value>9190c978-4898-4d8e-bebc-b6b5d9433065</con:value></con:property></con:properties></con:testCase><con:testCase id="3ea9f3e8-0e7e-410c-89ca-ae7a66d71d28" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="9a468446-ee55-4f33-8fd3-53abdb043407"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="a16a2c9f-91a0-47c0-9a99-8a1fb21baeae"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>77bda682-0898-409a-b576-8bd6c856d5c6</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMwLCJleHAiOjE1MDI3OTM2MzB9.iexmGrV4GKR-yvsiTy3dc5vp6KkrRaeOXeeRGRoRql8NN0Q9XZGx3sKDCXbhWwd8HYWsWSLXlWG40q6Gs9Ub_A</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="1f7f0e7f-7216-488c-a8c1-a26c04fea64f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set Deletion ID</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Delete</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SEt Assertion Id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Assert Deleted ( GetById )</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Delete" id="7642e6fc-2eb5-4470-8032-e493bc6f8eae"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Assert Deleted ( GetById )" id="d4ac8b19-4937-46f9-8509-d8a0ba0414b0"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Assert Deleted ( GetById )" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b0f117eb-aa68-41ee-bd7b-a7a9d65c4d96" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMwLCJleHAiOjE1MDI3OTM2MzB9.iexmGrV4GKR-yvsiTy3dc5vp6KkrRaeOXeeRGRoRql8NN0Q9XZGx3sKDCXbhWwd8HYWsWSLXlWG40q6Gs9Ub_A</con:value></con:property></con:properties></con:testCase><con:testCase id="52bcec6f-0bea-477e-b928-91b55146866d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAll" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Entity1" id="ff73807c-fb4f-4e8a-b252-4030fe6b2d0f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>40f5687c-aa56-4b1a-a2b4-99d0427bd260</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity2" id="b28b613a-caf4-48bd-9bf2-247b32fac153"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>73e21fcc-88d1-4ce3-8bd0-a952f4824ec2</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity3" id="163f8ea3-908f-4d85-bceb-4ea34ce2b801"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>9da90fee-12e9-4d72-959f-6d0064ca8891</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="b627ac95-5ce8-463c-a4be-9faf73f59146"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>77bda682-0898-409a-b576-8bd6c856d5c6</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMxLCJleHAiOjE1MDI3OTM2MzF9.7RKHNUgfaRimJkixWmMbbBqH2MHRm1j83Jqz1LoP48rHs-vGFx0-Kjw4n9FnzynNYHdIboLAZUkigI6Kfsmc3A</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="6ed1008d-c2be-402a-84f8-94d8e9de3373"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId1</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity1</con:sourceStep><con:targetType>Entity1</con:targetType><con:targetStep>Properties</con:targetStep><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId2</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity2</con:sourceStep><con:targetType>Entity2</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId3</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity3</con:sourceStep><con:targetType>Entity3</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="43dd4a51-7f9e-46b6-947e-77ac4c684f80"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Entity1</con:name><con:value>40f5687c-aa56-4b1a-a2b4-99d0427bd260</con:value></con:property><con:property><con:name>Entity2</con:name><con:value>73e21fcc-88d1-4ce3-8bd0-a952f4824ec2</con:value></con:property><con:property><con:name>Entity3</con:name><con:value>9da90fee-12e9-4d72-959f-6d0064ca8891</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GetAll" id="54809410-86e2-43fe-b9d2-9d99d4688467"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}" methodName="GetAll" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAll" id="264e557a-2377-406c-bd55-4cb399b8fb7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/bfedc82b-296c-415a-bac1-b1691a51bfe6</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c170debe-1907-48c7-b82c-29be79213eee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="db021b5e-b6dd-4774-9294-2db5e252abe4" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="48c785f4-6387-45c3-9d71-f232231565c2"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetAll#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 3 objects in the returned list
assert jsonResp.size() >= 3

//Assert the 3 inserted entities exists in the returned list
def entityIds = new String[3]
entityIds[0] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity1" )
entityIds[1] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity2" )
entityIds[2] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity3" )

def idList = [] 

for(item in jsonResp){
	idList.add(item.id)		
}

idList = idList.toSet()

assert idList.contains(entityIds[0])
assert idList.contains(entityIds[1])
assert idList.contains(entityIds[2])












</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMxLCJleHAiOjE1MDI3OTM2MzF9.7RKHNUgfaRimJkixWmMbbBqH2MHRm1j83Jqz1LoP48rHs-vGFx0-Kjw4n9FnzynNYHdIboLAZUkigI6Kfsmc3A</con:value></con:property></con:properties></con:testCase><con:testCase id="59828879-bf69-4378-ba61-54a7cf417d9b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchFields" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="5b334d40-99a8-4b8e-bd3b-a1988ce6887f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>77bda682-0898-409a-b576-8bd6c856d5c6</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a442eddd-4a99-45a7-a8e2-b78661b6d0d9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetSearchFields" id="dbee4c03-98f8-4b13-a0f9-2de1640441ee"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/search/fields" methodName="GetSearchFields" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="e46e876a-f8fc-47fb-94c8-843c7d41068f"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetSearchFields#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 1 objects in the returned list
assert jsonResp.size() == 4

//Assert expected fields
def idList = jsonResp.toSet() 
idList = jsonResp.toSet()

assert idList.contains("services.name")
assert idList.contains("services.detail.name")
assert idList.contains("name")
assert idList.contains("services.users.name")
</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="4b6e6737-5162-4f70-a1f7-1bdb606ae154" name="User Test"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e70ca6e4-32e1-4164-824a-2698933202ac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Login" id="e4aba2b7-decc-451d-8f9d-096c6a91db01"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/service-parent-1.0-SNAPSHOT/rest/auth/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Login" id="4aae4b62-0520-4a90-b7ec-e28d33809daf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"username":"user",
	"password":"pass"
}
</con:request><con:originalUri>http://192.168.2.140/service-parent-1.0-SNAPSHOT/rest/auth/login</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e317c490-514c-415e-b634-249feae1322f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Global Auth Header Value" id="49e26caf-504b-4245-8b0e-973ec51b16e5"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def headerValue = testRunner.testCase.getTestStepByName("Login").httpRequest.response.responseHeaders["Authorization"] as String

headerValue = headerValue.replaceAll("\\[", "").replaceAll("\\]","");

testRunner.testCase.setPropertyValue( "HeaderValue", headerValue ) 
</script></con:config></con:testStep><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property></con:properties></con:testCase><con:testCase id="08cf2649-4a80-44a2-900b-0e5b8903fc38" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="7eb68975-446a-465a-b8c5-7d7688b11090"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e70ca6e4-32e1-4164-824a-2698933202ac</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="9611da62-6117-480b-8f17-7454feaabf4a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="4597c720-1639-48c9-8188-d06741e7309e"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String
testRunner.testCase.setPropertyValue( "name", uuid ) 

uuid = randomUUID() as String
testRunner.testCase.setPropertyValue( "serviceDetailName", uuid ) 
 










</script></con:config></con:testStep><con:testStep type="restrequest" name="Create" id="dd794287-b247-423c-a8b7-5f7a88d37a9c"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create" id="b6e03607-3510-474a-8d8e-92097a94757b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"name":"${#TestCase#name}"	
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="01d001ea-971e-472d-87f7-fd4bbebf3cd1" name="Check 200 is returned"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ab49d409-d824-4927-a3cb-45aa01f9e46b" name="Response SLA" disabled="true"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Create" id="ae62429d-253c-41f0-a2f3-4635758857a9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setResponse</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set ResponseID" id="aff42223-7642-406c-a74e-1d6f912164cd"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Create#response}')
def jsonResp = new JsonSlurper().parseText(response)

testRunner.testCase.setPropertyValue("id",jsonResp.id )</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>997c89c9-9a68-4027-9a63-9dd7d30897a0</con:value></con:property><con:property><con:name>name</con:name><con:value>b3b5e0ac-0663-4b87-b713-1bc435396829</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"997c89c9-9a68-4027-9a63-9dd7d30897a0","updatedDate":1502792732138,"name":"b3b5e0ac-0663-4b87-b713-1bc435396829"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>4f5108bd-1f62-4697-895a-576bd303413d</con:value></con:property></con:properties></con:testCase><con:testCase id="c26dd054-86e1-408a-b62e-47d189e771e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetById" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="ef477b04-b8d2-4f15-8227-9868881d91e3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>4b4d49dd-9149-4373-bed3-3e5f34cb2ac6</con:value></con:property><con:property><con:name>name</con:name><con:value>3a92c17d-b26d-4a00-8c6b-59ef9be1bcc2</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"4b4d49dd-9149-4373-bed3-3e5f34cb2ac6","updatedDate":1502792732482,"name":"3a92c17d-b26d-4a00-8c6b-59ef9be1bcc2"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>50ff0daa-cf6d-4d2d-8e46-31eb99771bea</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="4bd47685-e72c-40eb-b5a5-0fd190eec756"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e70ca6e4-32e1-4164-824a-2698933202ac</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="fe629b9e-bb68-4e90-8116-9a34f6cb7f5f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setCreatedName</con:name><con:sourceType>name</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set CreatedID</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set serviceDetailName</con:name><con:sourceType>serviceDetailName</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>createdServiceDetailName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Set Id" id="ad955afc-281f-4aed-b6da-4d6548ddb9d0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set Get ById:id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>GetById</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetById" id="4aca5cdd-49a5-42b8-aa66-3609bc633045"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetById" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/id</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="4b4d49dd-9149-4373-bed3-3e5f34cb2ac6" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="542a1ede-aeb2-47fc-9e13-80075b907704"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetById#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert correct name is returned
assert jsonResp.name == testRunner.testCase.getPropertyValue("createdName")

//Assert correct id is returned
assert jsonResp.id == testRunner.testCase.getPropertyValue("createdId")








</script></con:config></con:testStep><con:testStep type="transfer" name="TRansfer response" id="c333f10c-2742-45bd-bf1f-60d6db868bf5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Transfer response</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetById</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property><con:property><con:name>createdName</con:name><con:value>3a92c17d-b26d-4a00-8c6b-59ef9be1bcc2</con:value></con:property><con:property><con:name>createdId</con:name><con:value>4b4d49dd-9149-4373-bed3-3e5f34cb2ac6</con:value></con:property><con:property><con:name>createdServiceDetailName</con:name><con:value>50ff0daa-cf6d-4d2d-8e46-31eb99771bea</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"4b4d49dd-9149-4373-bed3-3e5f34cb2ac6","updatedDate":1502792732000,"name":"3a92c17d-b26d-4a00-8c6b-59ef9be1bcc2"}</con:value></con:property></con:properties></con:testCase><con:testCase id="e32f320a-729f-44be-8876-21f57f43cc6a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="d71f97db-d3c2-4f97-958e-5d5087675152"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>cb03d9d5-d327-422e-9843-b302c5cfa29e</con:value></con:property><con:property><con:name>name</con:name><con:value>26e17cc7-240a-458b-99ec-a64482903d05</con:value></con:property><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMyLCJleHAiOjE1MDI3OTM2MzJ9.OT5gj1YY3xyIe2IVPj3bb6phNYLNxOd6QQOrLkEH5XcYafCfkqsDuK9mt3CvMRgWIbGM6cNrTqeOwBTY4HN36w</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"cb03d9d5-d327-422e-9843-b302c5cfa29e","updatedDate":1502792732955,"name":"26e17cc7-240a-458b-99ec-a64482903d05"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>5240fcda-6cd6-47e5-b1ba-7684414b3e24</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Create And Set Request Data" id="093436aa-cc8e-42a8-9b6a-9c728b984720"><con:settings/><con:config><script>import static java.util.UUID.randomUUID
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def uuid = randomUUID() as String

testRunner.testCase.setPropertyValue( "updatedName", uuid ) 











</script></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="4f07adac-8089-4ae2-af6d-a298d37d08cc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e70ca6e4-32e1-4164-824a-2698933202ac</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMzLCJleHAiOjE1MDI3OTM2MzN9.ddVTfe4PKp9A5eKEY42R5FWd9MooUsi9otPYOmuXjZ04prRpKff9EC4fqQr4wVckbs4b1PJlHFt2CjZTeQ5CUg</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="bea53913-519a-4ab8-a7f9-89e75678297b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set Id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Update" id="568d106d-6332-4cdc-b64c-3891c13d2849"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update" id="37067c43-3d10-4aba-9d7e-c7d596a25a48" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{"name":"${#TestCase#updatedName}"}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c10543d7-8a77-4825-83b6-c6bbc3c4541b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="cb03d9d5-d327-422e-9843-b302c5cfa29e" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="9e540ca7-07ad-4adc-9fb8-116e91d11142"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${Update#Response}')
def createResponse = context.expand('${Create#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)
def createResp = new JsonSlurper().parseText(createResponse)

//Assert correct name is returned
assert jsonResp.name != createResp.name
assert jsonResp.name == testRunner.testCase.getPropertyValue("updatedName")

//Assert correct id is returned
assert jsonResp.id == createResp.id









</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzMzLCJleHAiOjE1MDI3OTM2MzN9.ddVTfe4PKp9A5eKEY42R5FWd9MooUsi9otPYOmuXjZ04prRpKff9EC4fqQr4wVckbs4b1PJlHFt2CjZTeQ5CUg</con:value></con:property><con:property><con:name>updatedName</con:name><con:value>7a4848e1-5993-4227-8ad9-e1b8d75d37b3</con:value></con:property></con:properties></con:testCase><con:testCase id="2475d4f9-09bc-4556-bbb9-d1c326fbbca8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create" id="b7c3a83e-e331-4594-a681-a5c32c574021"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="bcb40962-7504-4991-a5d2-e8e09f53e671"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e70ca6e4-32e1-4164-824a-2698933202ac</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM0LCJleHAiOjE1MDI3OTM2MzR9.kCgQw0gH5ivMnusmi_hox90xtjz4NrW4ZCxxM9emW1BJu5-aiLmcF8Y7RtGPXfrzzTzeni25-dpvcXhGz_I0OQ</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="55db9f3e-2710-4060-ba0c-21ba9301e9a0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set Deletion ID</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Delete</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SEt Assertion Id</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Assert Deleted ( GetById )</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Delete" id="171bfb80-eae7-41de-a0d3-7d0473d11fd4"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete" id="5154788d-61aa-4126-912b-abea6744b368" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Assert Deleted ( GetById )" id="d2f0e2aa-a81b-4736-b6f5-3acc14332351"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Assert Deleted ( GetById )" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/3c5f438e-5e24-4ba2-95f8-75650907a571</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b0f117eb-aa68-41ee-bd7b-a7a9d65c4d96" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM0LCJleHAiOjE1MDI3OTM2MzR9.kCgQw0gH5ivMnusmi_hox90xtjz4NrW4ZCxxM9emW1BJu5-aiLmcF8Y7RtGPXfrzzTzeni25-dpvcXhGz_I0OQ</con:value></con:property></con:properties></con:testCase><con:testCase id="ee686723-2ce5-4798-b790-6185e7316bb7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAll" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Create Entity1" id="cd713b07-faff-47ef-a915-2d5bb7d43ab2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>f2472f97-77a7-4cb0-b541-0b03ff614e2d</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity2" id="d9c22ff7-fb8b-4965-bfa4-c20ebcc19739"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>8dcb9bae-d7c4-4259-8dad-7aa5690adf4a</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Entity3" id="aea96e88-d843-45de-81d4-622d36e181b3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>d723e886-0759-4789-9153-d1895f4a13d8</con:value></con:property><con:property><con:name>name</con:name></con:property><con:property><con:name>HeaderName</con:name></con:property><con:property><con:name>headerValue</con:name></con:property><con:property><con:name>response</con:name></con:property><con:property><con:name>serviceDetailName</con:name></con:property></con:properties><con:returnProperties><con:entry>id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Login" id="1a184f23-f243-4725-92c6-f84b8f505ae0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e70ca6e4-32e1-4164-824a-2698933202ac</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="83f2b445-a852-4a4d-afe9-23313e6a9e71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId1</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity1</con:sourceStep><con:targetType>Entity1</con:targetType><con:targetStep>Properties</con:targetStep><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId2</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity2</con:sourceStep><con:targetType>Entity2</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>entityId3</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Entity3</con:sourceStep><con:targetType>Entity3</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="d4fdfa67-95dd-4d9a-a281-e75b92c243a7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Entity1</con:name><con:value>f2472f97-77a7-4cb0-b541-0b03ff614e2d</con:value></con:property><con:property><con:name>Entity2</con:name><con:value>8dcb9bae-d7c4-4259-8dad-7aa5690adf4a</con:value></con:property><con:property><con:name>Entity3</con:name><con:value>d723e886-0759-4789-9153-d1895f4a13d8</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GetAll" id="6faa73ca-8c90-4392-9e90-219909fd4960"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}" methodName="GetAll" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAll" id="264e557a-2377-406c-bd55-4cb399b8fb7c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/bfedc82b-296c-415a-bac1-b1691a51bfe6</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c170debe-1907-48c7-b82c-29be79213eee" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="db021b5e-b6dd-4774-9294-2db5e252abe4" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="16741622-94aa-4d75-8166-97555329500f"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetAll#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 3 objects in the returned list
assert jsonResp.size() >= 3

//Assert the 3 inserted entities exists in the returned list
def entityIds = new String[3]
entityIds[0] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity1" )
entityIds[1] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity2" )
entityIds[2] = testRunner.testCase.testSteps["Properties"].getPropertyValue( "Entity3" )

def idList = [] 

for(item in jsonResp){
	idList.add(item.id)		
}

idList = idList.toSet()

assert idList.contains(entityIds[0])
assert idList.contains(entityIds[1])
assert idList.contains(entityIds[2])












</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property></con:properties></con:testCase><con:testCase id="fa3b0930-c04f-41f5-9cd0-826b2a89ccc4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchFields" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="e921bc26-c041-4b0f-b201-fa6b73bae434"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e70ca6e4-32e1-4164-824a-2698933202ac</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f6e89ee9-cb6f-461e-a3f5-aa6c8bfb8aae"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetSearchFields" id="8c98719e-c475-410b-a738-eac3d23e4579"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName3}/search/fields" methodName="GetSearchFields" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetSearchFields" id="c5907c95-fc5f-43ab-b6cb-2c8c7fe10b60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service/rest/service/search/fields</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Fields" id="2121f6ac-4a39-4fcc-827b-da68080bebdd"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

// get the response where you've the values you want to get
// using the name of your test step
def response = context.expand('${GetSearchFields#Response}')

//Parse response
def jsonResp = new JsonSlurper().parseText(response)

//Assert at least 1 objects in the returned list
assert jsonResp.size() == 4

//Assert expected fields
def idList = jsonResp.toSet() 
idList = jsonResp.toSet()

assert idList.contains("services.domain.name")
assert idList.contains("services.name")
assert idList.contains("services.detail.name")
assert idList.contains("name")
</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="f086c66d-a091-48df-8a2d-367e960ea122" name="Service-Domain Test ( ManyToOne )"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4ee2b928-9939-48a2-8b62-d1190af207f8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Domain To Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="e664091b-fcc8-4ec1-a09e-951467277416"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Service" id="731d8d34-7341-4419-96ad-ab20f8066561"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>66628852-7fc0-4ca6-84a3-c2a442b24bb9</con:value></con:property><con:property><con:name>name</con:name><con:value>4b7ffa7f-2e5d-411b-8729-edd1487e1699</con:value></con:property><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"66628852-7fc0-4ca6-84a3-c2a442b24bb9","updatedDate":1502792735418,"name":"4b7ffa7f-2e5d-411b-8729-edd1487e1699","detail":{"id":"66628852-7fc0-4ca6-84a3-c2a442b24bb9","updatedDate":1502792735418,"name":"f8f5b2c4-44cf-4eda-996c-644118c074d1"},"domain":null,"users":[]}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>f8f5b2c4-44cf-4eda-996c-644118c074d1</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Domain" id="134a5041-d716-4327-ae8b-3b963e10d197"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>4c60c355-7e38-4029-8cdc-b9793b1f2b8c</con:value></con:property><con:property><con:name>name</con:name><con:value>f29691fc-a5bc-41dc-8a0b-83444cb9a680</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM2LCJleHAiOjE1MDI3OTM2MzZ9.i919UBYQycBeF084qGDXvq7qS_ZQeYQV5tVpLcAB6i2CkpqkQrGc1mYoOK5jL0OxrUhWZk1I_WNWP6T5VjGQPQ</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"4c60c355-7e38-4029-8cdc-b9793b1f2b8c","updatedDate":1502792736384,"name":"f29691fc-a5bc-41dc-8a0b-83444cb9a680"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>dfff9f46-572c-4620-8de0-e195f8b68a86</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="dcfa4086-1e90-4aa2-b85a-480195a75a4b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setServiceIdInRequest</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>getSErviceByIdWithDomain</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setCreateServiceId</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>serviceId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setDomainId</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Domain</con:sourceStep><con:targetType>domainid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="c2762012-a617-4f60-8f02-0d6e5456766b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>domainId</con:name><con:value>23c00ff5-59c9-4d90-b88f-c266ea32788b</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>7b375bb2-be1e-46d2-80bc-b45f05cbe7e8</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON" id="849b01bb-12aa-400d-a214-87f16db0abc9"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Create Service#response}')
def domainResponse = context.expand('${Create Domain#response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
//add Domain to service
serviceResp.domain = domainResp
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = domainResp.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with Domain" id="375f7c17-6a6c-4678-96b9-882d8b3ce3c8"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "4c60c355-7e38-4029-8cdc-b9793b1f2b8c",
    "object": "domain",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="66628852-7fc0-4ca6-84a3-c2a442b24bb9" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with Domain" id="99df4f63-548e-4e6c-b6f4-509b1e9e5c1d"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="66628852-7fc0-4ca6-84a3-c2a442b24bb9" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Domain Attached" id="c11b7d06-fe98-437c-9243-ce4f5b94c889"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def addDomainResponse = context.expand('${ServiceById with Domain#Response}')

def serviceResponse = context.expand('${Create Service#response}')
def domainResponse = context.expand('${Create Domain#response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def domainResp = jsonSlurper.parseText(domainResponse)
def addDomainResp = jsonSlurper.parseText(addDomainResponse)

assert serviceResp.domain == null

assert addDomainResp.domain != null
assert addDomainResp.id == serviceResp.id
assert addDomainResp.domain.id == domainResp.id


</script></con:config></con:testStep><con:testStep type="transfer" name="transfer response" id="b38455f5-b690-4042-a955-39694e2b568e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set Response</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>ServiceById with Domain</con:sourceStep><con:targetType>response</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM1LCJleHAiOjE1MDI3OTM2MzV9.n1nn-KuXYf-4DVrSdUiZZ9wjo5vW-idsYgbpP6z8Hc4px54pK0BkILproLWw11zZJq0S9HLCkYaBTh_wlFuwow</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>66628852-7fc0-4ca6-84a3-c2a442b24bb9</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"66628852-7fc0-4ca6-84a3-c2a442b24bb9","updatedDate":1502792736000,"name":"4b7ffa7f-2e5d-411b-8729-edd1487e1699","detail":{"id":"66628852-7fc0-4ca6-84a3-c2a442b24bb9","updatedDate":1502792735000,"name":"f8f5b2c4-44cf-4eda-996c-644118c074d1"},"domain":{"id":"4c60c355-7e38-4029-8cdc-b9793b1f2b8c","updatedDate":1502792736384,"name":"f29691fc-a5bc-41dc-8a0b-83444cb9a680"},"users":[]}</con:value></con:property><con:property><con:name>domainid</con:name><con:value>4c60c355-7e38-4029-8cdc-b9793b1f2b8c</con:value></con:property></con:properties></con:testCase><con:testCase id="9375eda1-02b6-46b6-95a7-e3c4595d4a49" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Replace Domain In Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="00cf1e50-cfc0-4cc4-bebe-39b56d84e56a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM4LCJleHAiOjE1MDI3OTM2Mzh9.Ga-kS5ZpAfVN8WghSdRqIHHIvUS9yRgSj5z3NJOW2zh-DY7eZLhmD_RGGUKP2PaLhTVCfmYXoO0Rv83yGj-pBA</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Service And Add Domain" id="5b509032-a9a3-4c8e-91ae-d08cb073db68"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ee2b928-9939-48a2-8b62-d1190af207f8</con:targetTestCase><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM4LCJleHAiOjE1MDI3OTM2Mzh9.Ga-kS5ZpAfVN8WghSdRqIHHIvUS9yRgSj5z3NJOW2zh-DY7eZLhmD_RGGUKP2PaLhTVCfmYXoO0Rv83yGj-pBA</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>be1acef8-077c-48ad-b4ad-a1c11ce85fa0</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"be1acef8-077c-48ad-b4ad-a1c11ce85fa0","updatedDate":1502792739000,"name":"59ebbc7e-0ec6-4fc6-9d66-d4c84cd282d6","detail":{"id":"be1acef8-077c-48ad-b4ad-a1c11ce85fa0","updatedDate":1502792738000,"name":"34f99c22-f1a7-4611-8215-8636bc1c9567"},"domain":{"id":"26313135-9e9e-4433-baa5-c914a99b4659","updatedDate":1502792738847,"name":"ea862ffa-b6fe-49c7-b2ab-d745029049c6"},"users":[]}</con:value></con:property><con:property><con:name>domainid</con:name></con:property></con:properties><con:returnProperties><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>serviceId</con:entry><con:entry>response</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create new Domain" id="d90f3a9b-f51d-4e3d-a32e-813c0bfe3061"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf6da687-c149-4b03-b1ea-2e44dd0c74e3</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>1c35829a-fc0d-407c-8bbf-5bbdc4fc9196</con:value></con:property><con:property><con:name>name</con:name><con:value>7fb6bcc3-680c-4ae1-b484-fd7cb4c76b10</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM5LCJleHAiOjE1MDI3OTM2Mzl9.JAjFE43-nY_x4Y7smVzOCDe0sZhM0rxnhvt_l5jZ_dlREGVhogApuQ-EVXJeq98RwE4JWu_i12gmoHv46IIYtw</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"1c35829a-fc0d-407c-8bbf-5bbdc4fc9196","updatedDate":1502792739929,"name":"7fb6bcc3-680c-4ae1-b484-fd7cb4c76b10"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>89dde6da-44fd-444a-80a2-d0fbcd6d8272</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer New Domain" id="a64c375b-2662-471e-a7de-4e6e20070aac"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ServiceIdUpdated</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service And Add Domain</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>serviceById</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service And Add Domain</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SetServiceByIdNewDomain</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service And Add Domain</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set HeaderName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON new domain" id="f074ac24-edd4-4bcc-8879-fbe484ff30b3"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def domainResponse = context.expand('${Create new Domain#response}')
//Parse response
def domainResp = jsonSlurper.parseText(domainResponse)
//Format JSON



def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = domainResp.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with New Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with New Domain" id="c6e24d47-ba60-4e04-8ccc-9e86c81595e8"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with New Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "1c35829a-fc0d-407c-8bbf-5bbdc4fc9196",
    "object": "domain",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="be1acef8-077c-48ad-b4ad-a1c11ce85fa0" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with New Domain" id="b5a00add-851d-4828-aa26-ae2a57b6bc1d"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with New Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="be1acef8-077c-48ad-b4ad-a1c11ce85fa0" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert New Domain Attached" id="1be0acf8-2b63-4a0a-b104-bdaa63c3f501"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def createdServiceWithDomain = context.expand('${Create Service And Add Domain#response}')
def domainResponse = context.expand('${Create new Domain#response}')
def updatedServiceResponse = context.expand('${ServiceById with New Domain#Response}')

//Parse response
def domainResp = jsonSlurper.parseText(domainResponse)
def serviceResp = jsonSlurper.parseText(createdServiceWithDomain)
def updatedServiceResp = jsonSlurper.parseText(updatedServiceResponse)

assert updatedServiceResp.id == serviceResp.id
assert updatedServiceResp.domain != null
assert updatedServiceResp.domain.id != serviceResp.domain.id
assert updatedServiceResp.domain.id == domainResp.id








</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzM4LCJleHAiOjE1MDI3OTM2Mzh9.Ga-kS5ZpAfVN8WghSdRqIHHIvUS9yRgSj5z3NJOW2zh-DY7eZLhmD_RGGUKP2PaLhTVCfmYXoO0Rv83yGj-pBA</con:value></con:property></con:properties></con:testCase><con:testCase id="6ecc95cc-8503-48eb-b4e1-86124b5db4a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Domain In Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="c7f667a6-4f3a-43e0-92b4-3d3607d264ff"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQxLCJleHAiOjE1MDI3OTM2NDF9.6BXaEmkpYwLDBp_BqJwsYh4w0dCIJvWl-If-n7_scsLu7j9bhIHZt3IosOLjDMjrbcyVa7M7oWiAAXXmvRWYzA</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Service And Add Domain" id="9ba1842f-421e-4d62-a08e-d7dd7d438d4a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4ee2b928-9939-48a2-8b62-d1190af207f8</con:targetTestCase><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQxLCJleHAiOjE1MDI3OTM2NDF9.6BXaEmkpYwLDBp_BqJwsYh4w0dCIJvWl-If-n7_scsLu7j9bhIHZt3IosOLjDMjrbcyVa7M7oWiAAXXmvRWYzA</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>44ce5aeb-b81a-49e2-bb0d-7c7a9afd747a</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"44ce5aeb-b81a-49e2-bb0d-7c7a9afd747a","updatedDate":1502792742000,"name":"fa5c0814-8bca-4ba3-bb77-b8ec0720ac40","detail":{"id":"44ce5aeb-b81a-49e2-bb0d-7c7a9afd747a","updatedDate":1502792741000,"name":"b439d2c5-fdec-46ab-b872-b5ad05e3e515"},"domain":{"id":"10be5cad-9843-4282-960e-3350655bcc4d","updatedDate":1502792741781,"name":"cc974924-4dff-4e1b-9126-7b4543dbec91"},"users":[]}</con:value></con:property><con:property><con:name>domainid</con:name><con:value>10be5cad-9843-4282-960e-3350655bcc4d</con:value></con:property></con:properties><con:returnProperties><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>serviceId</con:entry><con:entry>response</con:entry><con:entry>domainid</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="1f7b0c9c-00ad-4915-a5cc-f62154c88e71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>serviceById</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service And Add Domain</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with New Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setServiceById updated</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service And Add Domain</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with Removed Domain</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON new domain" id="a5fbab52-d2d9-41c1-b8e6-0bf758177206"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Create Service And Add Domain#response}')
def serviceResp = jsonSlurper.parseText(serviceResponse)
//Parse response
def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = serviceResp.domain.id
serviceUpdateRequest.object = "domain"
serviceUpdateRequest.type = "DELETE"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with New Domain').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with New Domain" id="727a43ff-0bb3-4091-aefe-68022b2b9ddd"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with New Domain" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "10be5cad-9843-4282-960e-3350655bcc4d",
    "object": "domain",
    "type": "DELETE"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="44ce5aeb-b81a-49e2-bb0d-7c7a9afd747a" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with Removed Domain" id="39377ff0-e8da-4faf-9c05-965e76a08020"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with New Domain" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="44ce5aeb-b81a-49e2-bb0d-7c7a9afd747a" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert New Domain removed" id="390c5f0f-aa45-4f32-9fa5-7a1d11068efa"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def removedDomainResponse = context.expand('${ServiceById with Removed Domain#Response}')
def createdServiceResponse = context.expand('${Create Service And Add Domain#response}')

//Parse response
def removedDomainResp = jsonSlurper.parseText(removedDomainResponse)
def createdServiceResp = jsonSlurper.parseText(createdServiceResponse)

assert removedDomainResp.id == createdServiceResp.id
assert removedDomainResp.domain == null








</script></con:config></con:testStep><con:properties><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQxLCJleHAiOjE1MDI3OTM2NDF9.6BXaEmkpYwLDBp_BqJwsYh4w0dCIJvWl-If-n7_scsLu7j9bhIHZt3IosOLjDMjrbcyVa7M7oWiAAXXmvRWYzA</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>newDomainid</con:name><con:value>31f0a410-1a84-4400-962c-351cf811e52b</con:value></con:property></con:properties></con:testSuite><con:testSuite id="6b41f06b-4742-413f-8391-e83b671ace8b" name="Service-Users Test ( ManyToMany )"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ad821c29-f07f-4ca0-9370-080255b75bef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add Users To Service" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="f30631d8-26e1-4af6-bbe6-a15e33a8f3dd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQzLCJleHAiOjE1MDI3OTM2NDN9.VeRtaZf7teO3JKuYdVJTgq4_XXGQRaKkCD0WuAvDg4SPGEULVowWUGOCGJ-0ts_ur4u4QNFoFhAwBrbjgvDUQQ</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Service" id="74ad7c37-1e2f-4969-86ad-94e9d5e20b4a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f784c9a7-951e-402b-851f-8d8831112d58</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>0797dafa-22bb-4c62-8213-75d33efc347d</con:value></con:property><con:property><con:name>name</con:name><con:value>7a655e41-c743-4be2-876f-fa4f21928eb2</con:value></con:property><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQzLCJleHAiOjE1MDI3OTM2NDN9.VeRtaZf7teO3JKuYdVJTgq4_XXGQRaKkCD0WuAvDg4SPGEULVowWUGOCGJ-0ts_ur4u4QNFoFhAwBrbjgvDUQQ</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"0797dafa-22bb-4c62-8213-75d33efc347d","updatedDate":1502792743512,"name":"7a655e41-c743-4be2-876f-fa4f21928eb2","detail":{"id":"0797dafa-22bb-4c62-8213-75d33efc347d","updatedDate":1502792743512,"name":"bdeec578-ff13-4844-950f-72207f52d99b"},"domain":null,"users":[]}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>bdeec578-ff13-4844-950f-72207f52d99b</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create User1" id="26c3fcae-bb47-48cf-b9a8-eba6bdbb0267"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>0ac8e21b-b595-4e7f-baf8-240c9be23c7b</con:value></con:property><con:property><con:name>name</con:name><con:value>42dbcc22-2e2f-4adf-9fe0-af76a4343c93</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQ0LCJleHAiOjE1MDI3OTM2NDR9.pXzH0XUrjR7d-i7WtpR_RKsROe62LIPV_hmtr9PXgkW6RV1kI2amc_gg1YTJA0Xnbkz-wijGcQfC9pOhS9-hfA</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"0ac8e21b-b595-4e7f-baf8-240c9be23c7b","updatedDate":1502792744065,"name":"42dbcc22-2e2f-4adf-9fe0-af76a4343c93"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>a408cd1e-0db0-4dfa-8e2f-4e8e3c477d3e</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create User2" id="7e9cfefe-8e79-4406-9a63-9f96100721e0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>08cf2649-4a80-44a2-900b-0e5b8903fc38</con:targetTestCase><con:properties><con:property><con:name>id</con:name><con:value>da0d6c16-98be-49e5-8caa-2b11dc871642</con:value></con:property><con:property><con:name>name</con:name><con:value>3d61bc55-42c5-4b50-a88c-712ef104ab75</con:value></con:property><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQ0LCJleHAiOjE1MDI3OTM2NDR9.pXzH0XUrjR7d-i7WtpR_RKsROe62LIPV_hmtr9PXgkW6RV1kI2amc_gg1YTJA0Xnbkz-wijGcQfC9pOhS9-hfA</con:value></con:property><con:property><con:name>response</con:name><con:value>{"id":"da0d6c16-98be-49e5-8caa-2b11dc871642","updatedDate":1502792744455,"name":"3d61bc55-42c5-4b50-a88c-712ef104ab75"}</con:value></con:property><con:property><con:name>serviceDetailName</con:name><con:value>0e0cfabb-d52c-43d3-86a7-91053cdcf303</con:value></con:property></con:properties><con:returnProperties><con:entry>id</con:entry><con:entry>name</con:entry><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>response</con:entry><con:entry>serviceDetailName</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="dc019090-368a-4379-b097-210638a72af5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set id  Update User 1</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with user1</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set id Update User 2</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Update Service with user2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set id Service By id with users</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>ServiceById with Users</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setUserid1</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create User1</con:sourceStep><con:targetType>user1Id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>setUserid2</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create User2</con:sourceStep><con:targetType>user2Id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set serviceid</con:name><con:sourceType>id</con:sourceType><con:sourceStep>Create Service</con:sourceStep><con:targetType>serviceId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON user1" id="c5f30e20-d349-4294-aeb7-0a486dd035cf"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Create Service#response}')
def userResponse = context.expand('${Create User1#response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def userResp = jsonSlurper.parseText(userResponse)

def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = userResp.id
serviceUpdateRequest.object = "users"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with user1').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with user1" id="1de22ff6-7051-4ce4-a95f-b7b0104b358a"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with user1" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "0ac8e21b-b595-4e7f-baf8-240c9be23c7b",
    "object": "users",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="0797dafa-22bb-4c62-8213-75d33efc347d" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON user2" id="362fd82b-e909-4520-8e9f-ccd82a586a47"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Create Service#response}')
def userResponse = context.expand('${Create User2#response}')
//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def userResp = jsonSlurper.parseText(userResponse)

def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = userResp.id
serviceUpdateRequest.object = "users"
serviceUpdateRequest.type = "ADD"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Update Service with user2').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))
</script></con:config></con:testStep><con:testStep type="restrequest" name="Update Service with user2" id="92583f2f-5a1a-44f3-a83f-545ba9d6631c"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with user2" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "da0d6c16-98be-49e5-8caa-2b11dc871642",
    "object": "users",
    "type": "ADD"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="0797dafa-22bb-4c62-8213-75d33efc347d" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById with Users" id="4bf7fed1-b4bc-4f4a-b794-65f604b86db8"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with Users" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="0797dafa-22bb-4c62-8213-75d33efc347d" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Users Attached" id="8c2a76bf-df5c-4d2b-9c20-dc7fb38823b9"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceWithoutUsersResponse = context.expand('${Create Service#response}')
def serviceWithUsersResponse = context.expand('${ServiceById with Users#Response}')
def user1Response = context.expand('${Create User1#response}')
def user2Response = context.expand('${Create User2#response}')

//Parse response
def serviceWithoutUsersResp = jsonSlurper.parseText(serviceWithoutUsersResponse)
def serviceWithUsersResp = jsonSlurper.parseText(serviceWithUsersResponse)
def user1Resp = jsonSlurper.parseText(user1Response)
def user2Resp = jsonSlurper.parseText(user2Response)


assert serviceWithoutUsersResp.users.size == 0

assert serviceWithUsersResp.users != null
assert serviceWithUsersResp.users.size() == 2

def usersList = serviceWithUsersResp.users

def user1 = usersList[0]
def user2 = usersList[1]

if(user1.id == user1Resp.id){
	assert user2.id == user2Resp.id
}else{
	assert user1.id == user2Resp.id
	assert user2.id == user1Resp.id
}






</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzkyNzQzLCJleHAiOjE1MDI3OTM2NDN9.VeRtaZf7teO3JKuYdVJTgq4_XXGQRaKkCD0WuAvDg4SPGEULVowWUGOCGJ-0ts_ur4u4QNFoFhAwBrbjgvDUQQ</con:value></con:property><con:property><con:name>user1Id</con:name><con:value>0ac8e21b-b595-4e7f-baf8-240c9be23c7b</con:value></con:property><con:property><con:name>user2Id</con:name><con:value>da0d6c16-98be-49e5-8caa-2b11dc871642</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>0797dafa-22bb-4c62-8213-75d33efc347d</con:value></con:property></con:properties></con:testCase><con:testCase id="849ae6a6-b065-40ca-ba3f-0e39603b3293" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Users" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Login" id="6df472dd-adf1-4c10-811d-8375e875e74f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ded9caf-0f51-42b8-a6dc-33572bda19f4</con:targetTestCase><con:properties><con:property><con:name>HeaderName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>HeaderValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzk0MzE0LCJleHAiOjE1MDI3OTUyMTR9.ow0KC8nHG63ouh0ZVPSgjy_tyDiwN4AbODw4tegQJ_UEd_H4tVnvkU9ilON6EKxnEGeiXS4oEf6Aiq_IZSGvpw</con:value></con:property></con:properties><con:returnProperties><con:entry>HeaderName</con:entry><con:entry>HeaderValue</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Create Service with Users" id="c1876512-b735-46fd-8eda-258cda3594f2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>ad821c29-f07f-4ca0-9370-080255b75bef</con:targetTestCase><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzk0MzE0LCJleHAiOjE1MDI3OTUyMTR9.ow0KC8nHG63ouh0ZVPSgjy_tyDiwN4AbODw4tegQJ_UEd_H4tVnvkU9ilON6EKxnEGeiXS4oEf6Aiq_IZSGvpw</con:value></con:property><con:property><con:name>user1Id</con:name><con:value>a5d58dac-6b1f-4e7c-b049-026914f8205c</con:value></con:property><con:property><con:name>user2Id</con:name><con:value>e8bf7af9-bd40-40ee-8f36-cded784ee791</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>6a2db4fc-1071-4f28-9e22-a7ed2d0e990e</con:value></con:property></con:properties><con:returnProperties><con:entry>headerName</con:entry><con:entry>headerValue</con:entry><con:entry>user1Id</con:entry><con:entry>user2Id</con:entry><con:entry>serviceId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="72188af0-4026-4799-8419-c37e4345e5e1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerName</con:name><con:sourceType>HeaderName</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set headerValue</con:name><con:sourceType>HeaderValue</con:sourceType><con:sourceStep>Login</con:sourceStep><con:targetType>headerValue</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>set ServiceId Delete User1</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service with Users</con:sourceStep><con:targetType>id</con:targetType><con:targetStep>Delete User1 in Service</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>set ServiceId Delete User2</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service with Users</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>id</con:targetType><con:targetStep>Delete User2 in Service</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>set ServiceId without Users</con:name><con:sourceType>serviceId</con:sourceType><con:sourceStep>Create Service with Users</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>id</con:targetType><con:targetStep>ServiceById without Users</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON user1" id="0eda08c4-61b3-4b16-81db-2b02fd4369f9"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

def userId1 = context.expand('${Create Service with Users#user1Id}')
def userId2 = context.expand('${Create Service with Users#user2Id}')

def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = userId1
serviceUpdateRequest.object = "users"
serviceUpdateRequest.type = "DELETE"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Delete User1 in Service').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete User1 in Service" id="aab66b48-f265-4bea-90cb-72ec9c6a258e"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with user1" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "e8bf7af9-bd40-40ee-8f36-cded784ee791",
    "object": "users",
    "type": "DELETE"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="6a2db4fc-1071-4f28-9e22-a7ed2d0e990e" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set request JSON user2" id="d51aee74-b0f8-4df0-a330-30a3362239a0"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

def userId1 = context.expand('${Create Service with Users#user1Id}')
def userId2 = context.expand('${Create Service with Users#user2Id}')

def serviceUpdateRequest = jsonSlurper.parseText('{"objectId":"id", "object":"object","type":"type"}"')

serviceUpdateRequest.objectId = userId2
serviceUpdateRequest.object = "users"
serviceUpdateRequest.type = "DELETE"

def output = JsonOutput.toJson(serviceUpdateRequest)
//Set JSON in request
def request = context.testCase.getTestStepByName('Delete User2 in Service').getTestRequest()
request.setRequestContent(JsonOutput.prettyPrint(output))

</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete User2 in Service" id="12b59d99-8ed2-46ec-bb2c-4b608cf1514a"><con:settings/><con:config service="http://192.168.2.140:8082" methodName="updateObject" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/update/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update Service with user2" id="51bd938b-af4a-41e1-8030-0e47b03ce4d5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
    "objectId": "e8bf7af9-bd40-40ee-8f36-cded784ee791",
    "object": "users",
    "type": "DELETE"
}</con:request><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/id</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2d8539ea-a3ec-4ae2-a00b-7b47ff2e9566" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="6a2db4fc-1071-4f28-9e22-a7ed2d0e990e" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ServiceById without Users" id="967ae520-dfd5-413c-a6d7-0b39f4086323"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/{id}" methodName="GetById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ServiceById with Users" id="26f7bfc2-bf04-43ed-a163-8e539b990198" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="${#TestCase#headerName}" value="${#TestCase#headerValue}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request/><con:originalUri>http://192.168.2.140/service-parent/rest/service-parent/800fd5db-d678-4e58-ad91-ed8996d52ce2</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93c1c8f4-1e59-4f4f-843d-07b5adb04694" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="6a2db4fc-1071-4f28-9e22-a7ed2d0e990e" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Assert Users Deleted" id="e17a6f46-d32e-41d5-aa24-f55a9dbac7de"><con:settings/><con:config><script>import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import java.util.regex.Matcher

def jsonSlurper = new JsonSlurper()

// get the response where you've the values you want to get
// using the name of your test step
def serviceResponse = context.expand('${Create Service with Users#response}')
def serviceDeletedUsersResponse = context.expand('${ServiceById without Users#Response}')
def userId1 = context.expand('${Create Service with Users#user1Id}')
def userId2 = context.expand('${Create Service with Users#user2Id}')

//Parse response
def serviceResp = jsonSlurper.parseText(serviceResponse)
def serviceDeletedUsersResp = jsonSlurper.parseText(serviceDeletedUsersResponse)

assert serviceWithoutUsersResp.users.size == 0

assert serviceWithUsersResp.users != null
assert serviceWithUsersResp.users.size() == 2

def usersList = serviceWithUsersResp.users

def user1 = usersList[0]
def user2 = usersList[1]

if(user1.id == user1Resp.id){
	assert user2.id == user2Resp.id
}else{
	assert user1.id == user2Resp.id
	assert user2.id == user1Resp.id
}






</script></con:config></con:testStep><con:properties><con:property><con:name>headerName</con:name><con:value>Authorization</con:value></con:property><con:property><con:name>headerValue</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiaXNzIjoiaHR0cDovLzE5Mi4xNjguMi4xNDA6ODA4Mi9zZXJ2aWNlLXBhcmVudC0xLjAtU05BUFNIT1QvcmVzdC9hdXRoL2xvZ2luIiwiaWF0IjoxNTAyNzk0MzE0LCJleHAiOjE1MDI3OTUyMTR9.ow0KC8nHG63ouh0ZVPSgjy_tyDiwN4AbODw4tegQJ_UEd_H4tVnvkU9ilON6EKxnEGeiXS4oEf6Aiq_IZSGvpw</con:value></con:property><con:property><con:name>user1Id</con:name><con:value>0ac8e21b-b595-4e7f-baf8-240c9be23c7b</con:value></con:property><con:property><con:name>user2Id</con:name><con:value>da0d6c16-98be-49e5-8caa-2b11dc871642</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>0797dafa-22bb-4c62-8213-75d33efc347d</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>serviceid</con:name><con:value>07c642e1-868d-4fba-94bc-57651a51f242</con:value></con:property><con:property><con:name>userid1</con:name><con:value>31c21746-6b06-4a5e-b38c-4063a7317cba</con:value></con:property><con:property><con:name>userid2</con:name><con:value>ecf74bfd-17bf-41e0-90a3-a6431fdc5e76</con:value></con:property><con:property><con:name>newDomainid</con:name><con:value>65eccd81-260b-4fed-9928-ec1225caa88a</con:value></con:property></con:properties></con:testSuite><con:testSuite id="a985785e-1a79-43f0-9b71-1d8364fd8344" name="Search Test" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="dfebcb79-2536-4018-bd01-722735e63218" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Service Filtered List" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetFilteredList" id="2aa4061c-aec2-4cde-af76-69715dbb8e28"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName}/list" methodName="GetFilteredList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["name", "domain.name", "users.name", "detail.name"],
	"pagination":{
		"listSize":5,
		"page":0
		},
	"globalSearchWord":"*"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f9a0cdc2-9b96-4a4b-8bc2-b8da91c4b03d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Domain Filtered List" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetFilteredList" id="12bb3aeb-8853-47c7-9f65-92711798f95c"><con:settings/><con:config service="http://192.168.2.140:8082" resourcePath="/${#Project#DomainName}/rest/${#Project#ServiceName2}/list" methodName="GetFilteredList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetFilteredList" id="24f81e1a-3302-4978-96d8-1b7eb55474ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.2.140:8082</con:endpoint><con:request>{
	"searchFields":["services.name", "services.detail.name", "name", "services.users.name"],
	"pagination":{
		"listSize":10,
		"page":0
		},
	"globalSearchWord":"*"
}</con:request><con:originalUri>http://192.168.2.140/service/rest/service/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dab77770-f97e-4678-bf73-423c08bcced1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User Filtered List" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>DomainName</con:name><con:value>service-parent-1.0-SNAPSHOT</con:value></con:property><con:property><con:name>ServiceName</con:name><con:value>service-parent</con:value></con:property><con:property><con:name>ServiceName2</con:name><con:value>domain</con:value></con:property><con:property><con:name>ServiceName3</con:name><con:value>user</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>